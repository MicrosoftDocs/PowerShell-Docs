### YamlMime:PowershellCmdlet
summary: |-
  Suspends (pauses) one or more running services.
module: Microsoft.PowerShell.Management
notes: |-
  This cmdlet is only available on Windows platforms.

  - `Suspend-Service` can control services only when the current user has permission to do this. If a
    command does not work correctly, you might not have the required permissions.
  - `Suspend-Service` can suspend only services that support being suspended and resumed. To determine
    whether a particular service can be suspended, use the `Get-Service` cmdlet together with the
    **CanPauseAndContinue** property. For example,
    `Get-Service wmi | Format-List Name, CanPauseAndContinue`. To find all services on the computer
    that can be suspended, type `Get-Service | Where-Object {$_.CanPauseAndContinue -eq $true}`.
  - To find the service names and display names of the services on your system, type `Get-Service`.
    The service names appear in the **Name** column, and the display names appear in the
    **DisplayName** column.
inputs:
- name: <xref href="System.ServiceProcess.ServiceController, System.String" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a service object or a string that contains a service name to this cmdlet.
outputs:
- name: <xref href="None, System.ServiceProcess.ServiceController" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet generates a **System.ServiceProcess.ServiceController** object that represents the
    service, if you specify the **PassThru** parameter. Otherwise, this cmdlet does not generate any
    output.
links:
- text: Get-Service
  href: Get-Service.yml
- text: New-Service
  href: New-Service.yml
- text: Restart-Service
  href: Restart-Service.yml
- text: Resume-Service
  href: Resume-Service.yml
- text: Set-Service
  href: Set-Service.yml
- text: Start-Service
  href: Start-Service.yml
- text: Stop-Service
  href: Stop-Service.yml
- text: Remove-Service
  href: Remove-Service.yml
syntaxes:
- >-
  Suspend-Service [-InputObject] <ServiceController[]> [-PassThru] [-Include <String[]>] [-Exclude <String[]>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Suspend-Service [-Name] <String[]> [-PassThru] [-Include <String[]>] [-Exclude <String[]>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Suspend-Service [-PassThru] -DisplayName <String[]> [-Include <String[]>] [-Exclude <String[]>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Suspend a service'
  code: |-
    PS C:\> Suspend-Service -DisplayName "Telnet"
  description: |-
    This command suspends the Telnet service (Tlntsvr) service on the local computer.
  summary: ""
- title: 'Example 2: Display what would happen if you suspend services'
  code: |-
    PS C:\> Suspend-Service -Name lanman* -WhatIf
  description: |-
    This command tells what would happen if you suspended the services that have a service name that
    starts with lanman. To suspend the services, rerun the command without the **WhatIf** parameter.
  summary: ""
- title: 'Example 3: Get and suspend a service'
  code: |-
    PS C:\> Get-Service schedule | Suspend-Service
  description: |-
    This command uses the `Get-Service` cmdlet to get an object that represents the Task Scheduler
    (Schedule) service on the computer. The pipeline operator (`|`) passes the result to
    `Suspend-Service`, which suspends the service.
  summary: ""
- title: 'Example 4: Suspend all services that can be suspended'
  code: |-
    PS C:\> Get-Service | Where-Object {$_.CanPauseAndContinue -eq "True"} | Suspend-Service -Confirm
  description: |-
    This command suspends all of the services on the computer that can be suspended. It uses
    `Get-Service` to get objects that represent the services on the computer. The pipeline operator
    passes the results to the `Where-Object` cmdlet, which selects only the services that have a value
    of `$True` for the **CanPauseAndContinue** property. Another pipeline operator passes the results to
    `Suspend-Service`. The **Confirm** parameter prompts you for confirmation before suspending each of
    the services.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayName
  isRequired: true
  description: |+
    Specifies the display names of the services to be suspended. Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Exclude
  description: |+
    Specifies services to omit from the specified services. The value of this parameter qualifies the
    **Name** parameter. Enter a name element or pattern, such as "s*". Wildcard characters are
    permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Include
  description: |+
    Specifies services to suspend. The value of this parameter qualifies the **Name** parameter. Enter a
    name element or pattern, such as "s*". Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.ServiceProcess.ServiceController" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies **ServiceController** objects that represent the services to suspend. Enter a variable
    that contains the objects, or type a command or expression that gets the objects.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies the service names of the services to suspend. Wildcard characters are permitted.

    The parameter name is optional. You can use **Name** or its alias, **ServiceName**, or you can omit
    the parameter name.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "0"
  aliases: ServiceName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working. By default, this cmdlet does not
    generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Management.Suspend-Service
name: Suspend-Service
description: |-
  The `Suspend-Service` cmdlet sends a suspend message to the Windows Service Controller for each of
  the specified services. While suspended, the service is still running, but its action is stopped
  until resumed, such as by usingthe `Resume-Service` cmdlet. You can specify the services by their
  service names or display names, or you can use the **InputObject** parameter to pass a service
  object that represents the services that you want to suspend.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/suspend-service?view=powershell-7&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Suspend-Service
