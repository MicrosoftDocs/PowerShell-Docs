### YamlMime:PowershellCmdlet
summary: |-
  Changes the value of an item to the value specified in the command.
module: Microsoft.PowerShell.Management
notes: |-
  - `Set-Item` is not supported by the PowerShell FileSystem provider. To change the values of items in
    the file system, use the `Set-Content` cmdlet.
  - In the Registry drives, `HKLM:` and `HKCU:`, `Set-Item` changes the data in the (Default) value of a
    registry key.
    - To create and change the names of registry keys, use the `New-Item` and `Rename-Item` cmdlet.
    - To change the names and data in registry values, use the `New-ItemProperty`, `Set-ItemProperty`, and
      `Rename-ItemProperty` cmdlets.
  - `Set-Item` is designed to work with the data exposed by any provider.
    To list the providers available in your session, type `Get-PsProvider`.
    For more information, see [about_Providers](../Microsoft.PowerShell.Core/About/about_Providers.md).
inputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe an object that represents the new value of the item to this cmdlet.
outputs:
- name: <xref href="None or an object representing the new or changed item." data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet generates an object that represent the item, if you specify the *PassThru* parameter.
    Otherwise, this cmdlet does not generate any output.
links:
- text: Clear-Item
  href: Clear-Item.yml
- text: Copy-Item
  href: Copy-Item.yml
- text: Get-Item
  href: Get-Item.yml
- text: Invoke-Item
  href: Invoke-Item.yml
- text: Move-Item
  href: Move-Item.yml
- text: New-Item
  href: New-Item.yml
- text: Remove-Item
  href: Remove-Item.yml
- text: Rename-Item
  href: Rename-Item.yml
- text: about_Providers
  href: ../Microsoft.PowerShell.Core/About/about_Providers.md
syntaxes:
- >-
  Set-Item [-Path] <String[]> [[-Value] <Object>] [-Force] [-PassThru] [-Filter <String>] [-Include <String[]>]

   [-Exclude <String[]>] [-Credential <PSCredential>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-Item -LiteralPath <String[]> [[-Value] <Object>] [-Force] [-PassThru] [-Filter <String>]

   [-Include <String[]>] [-Exclude <String[]>] [-Credential <PSCredential>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Create an alias'
  code: |-
    Set-Item -Path alias:np -Value "c:\windows\notepad.exe"
  description: ""
  summary: |+
    This command creates an alias of np for Notepad.

- title: 'Example 2: Change the value of an environment variable'
  code: |-
    Set-Item -Path env:UserRole -Value "Administrator"
  description: ""
  summary: |+
    This command changes the value of the UserRole environment variable to Administrator.

- title: 'Example 3: Modify your prompt function'
  code: |-
    Set-Item -Path function:prompt -Value {'PS '+ (Get-Date -Format t) + " " + (Get-Location) + '> '}
  description: ""
  summary: |+
    This command changes the prompt function so that it displays the time before the path.

- title: 'Example 4: Set options for your prompt function'
  code: |-
    Set-Item -Path function:prompt -Options "AllScope,ReadOnly"
  description: ""
  summary: |+
    This command sets the **AllScope** and **ReadOnly** options for the prompt function.
    This command uses the **Options** dynamic parameter of `Set-Item`.
    The **Options** parameter is available in `Set-Item` only when you use it with the **Alias** or
    **Function** provider.

parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    > [!NOTE]
    > This parameter is not supported by any providers installed with PowerShell.
    > To impersonate another user, or elevate your credentials when running this cmdlet,
    > use [Invoke-Command](../Microsoft.PowerShell.Core/Invoke-Command.yml).

  defaultValue: Current user
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Exclude
  description: |+
    Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value
    of this parameter qualifies the **Path** parameter. Enter a path element or pattern, such as
    `*.txt`. Wildcard characters are permitted. The **Exclude** parameter is effective only when the
    command includes the contents of an item, such as `C:\Windows\*`, where the wildcard character
    specifies the contents of the `C:\Windows` directory.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Specifies a filter to qualify the **Path** parameter. The [FileSystem](../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)
    provider is the only installed PowerShell provider that supports the use of filters. You can find
    the syntax for the **FileSystem** filter language in [about_Wildcards](../Microsoft.PowerShell.Core/About/about_Wildcards.md).
    Filters are more efficient than other parameters, because the provider applies them when the cmdlet
    gets the objects rather than having PowerShell filter the objects after they are retrieved.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the cmdlet to set items that cannot otherwise be changed, such as read-only alias or
    variables. The cmdlet cannot change constant aliases or variables.
    Implementation varies from provider to provider.
    For more information, see [about_Providers](../Microsoft.PowerShell.Core/About/about_Providers.md).
    Even using the *Force* parameter, the cmdlet cannot override security restrictions.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Include
  description: |+
    Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value
    of this parameter qualifies the **Path** parameter. Enter a path element or pattern, such as
    `"*.txt"`. Wildcard characters are permitted. The **Include** parameter is effective only when the
    command includes the contents of an item, such as `C:\Windows\*`, where the wildcard character
    specifies the contents of the `C:\Windows` directory.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: LiteralPath
  isRequired: true
  description: |+
    Specifies a path to one or more locations. The value of **LiteralPath** is used exactly as it is
    typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose
    it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters
    as escape sequences.

    For more information, see [about_Quoting_Rules](../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: PSPath, LP
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Passes an object that represents the item to the pipeline.
    By default, this cmdlet does not generate any output.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Path
  isRequired: true
  description: |+
    Specifies a path of the location of the items.
    Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Object" data-throw-if-not-resolved="False" />
  name: Value
  description: |+
    Specifies a new value for the item.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Management.Set-Item
name: Set-Item
description: |-
  The `Set-Item` cmdlet changes the value of an item, such as a variable or registry key, to the value
  specified in the command.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 5/14/2019
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/set-item?view=powershell-7&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-Item
