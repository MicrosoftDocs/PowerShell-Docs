### YamlMime:PowershellCmdlet
summary: |-
  Resumes one or more suspended (paused) services.
module: Microsoft.PowerShell.Management
notes: |-
  This cmdlet is only available on Windows platforms.

  - The status of services that have been suspended is Paused. When services are resumed, their status
    is Running.
  - `Resume-Service` can control services only when the current user has permission to do this. If a
    command does not work correctly, you might not have the required permissions.
  - To find the service names and display names of the services on your system, type `Get-Service`.
    The service names appear in the **Name** column, and the display names appear in the
    **DisplayName** column.
inputs:
- name: <xref href="System.ServiceProcess.ServiceController, System.String" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a service object or a string that contains a service name to this cmdlet.
outputs:
- name: <xref href="None, System.ServiceProcess.ServiceController" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet generates a **System.ServiceProcess.ServiceController** object that represents the
    resumed service, if you specify the **PassThru** parameter. Otherwise, this cmdlet does not generate
    any output.
links:
- text: Get-Service
  href: Get-Service.yml
- text: New-Service
  href: New-Service.yml
- text: Restart-Service
  href: Restart-Service.yml
- text: Set-Service
  href: Set-Service.yml
- text: Start-Service
  href: Start-Service.yml
- text: Stop-Service
  href: Stop-Service.yml
- text: Suspend-Service
  href: Suspend-Service.yml
- text: Remove-Service
  href: Remove-Service.yml
syntaxes:
- >-
  Resume-Service [-InputObject] <ServiceController[]> [-PassThru] [-Include <String[]>] [-Exclude <String[]>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Resume-Service [-Name] <String[]> [-PassThru] [-Include <String[]>] [-Exclude <String[]>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Resume-Service [-PassThru] -DisplayName <String[]> [-Include <String[]>] [-Exclude <String[]>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Resume a service on the local computer'
  code: |-
    PS C:\> Resume-Service "sens"
  description: |-
    This command resumes the System Event Notification service on the local computer. The service name
    is represented in the command by sens. The command uses the **Name** parameter to specify the
    service name of the service, but the command omits the parameter name because the parameter name is
    optional.
  summary: ""
- title: 'Example 2: Resume all suspended services'
  code: |-
    PS C:\> Get-Service | Where-Object {$_.Status -eq "Paused"} | Resume-Service
  description: |-
    This command resumes all of the suspended services on the computer. The `Get-Service` cmdlet command
    gets all of the services on the computer. The pipeline operator (`|`) passes the results to the
    `Where-Object` cmdlet, which selects the services that have a **Status** property of Paused. The
    next pipeline operator sends the results to `Resume-Service`, which resumes the paused services.

    In practice, you would use the **WhatIf** parameter to determine the effect of the command before
    you run it.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayName
  isRequired: true
  description: |+
    Specifies the display names of the services to be resumed.
    Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Exclude
  description: |+
    Specifies services that this cmdlet omits. The value of this parameter qualifies the **Name**
    parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Include
  description: |+
    Specifies services to resume. The value of this parameter qualifies **Name** parameter. Enter a name
    element or pattern, such as s*. Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.ServiceProcess.ServiceController" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies **ServiceController** objects that represent the services to resumed. Enter a variable
    that contains the objects, or type a command or expression that gets the objects.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies the service names of the services to be resumed.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ServiceName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object that represents the service. By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Management.Resume-Service
name: Resume-Service
description: |-
  The `Resume-Service` cmdlet sends a resume message to the Windows Service Controller for each of the
  specified services. If a service is suspended, it resumes. If it is currently running, the message
  is ignored. You can specify the services by their service names or display names, or you can use the
  **InputObject** parameter to pass a service object that represents the services that you want to
  resume.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/resume-service?view=powershell-7&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Resume-Service
