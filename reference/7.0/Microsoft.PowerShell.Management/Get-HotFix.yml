### YamlMime:PowershellCmdlet
summary: |-
  Gets the hotfixes that are installed on local or remote computers.
module: Microsoft.PowerShell.Management
notes: |-
  This cmdlet is only available on Windows platforms.

  The **Win32_QuickFixEngineering** [WMI class](/windows/desktop/WmiSdk/retrieving-a-class) represents
  a small system-wide update, commonly referred to as a quick-fix engineering (QFE) update, applied to
  the current operating system. This class returns only the updates supplied by Component Based
  Servicing (CBS). These updates are not listed in the registry. Updates supplied by Microsoft Windows
  Installer (MSI) or the [Windows Update](https://update.microsoft.com) site are not returned by
  **Win32_QuickFixEngineering**. For more information, see [Win32_QuickFixEngineering class](/windows/desktop/CIMWin32Prov/win32-quickfixengineering).

  The `Get-HotFix` output might vary on different operating systems.
inputs:
- name: <xref href="String" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe one or more computer names to Get-HotFix.
outputs:
- name: <xref href="System.Management.ManagementObject#root\CIMV2\Win32_QuickFixEngineering" data-throw-if-not-resolved="False" />
  description: |-
    `Get-HotFix` returns objects that represent the hotfixes on the computer.
links:
- text: about_Arrays
  href: ../Microsoft.PowerShell.Core/About/about_Arrays.md
- text: Add-Content
  href: Add-Content.yml
- text: Get-Credential
  href: ../Microsoft.PowerShell.Security/Get-Credential.yml
- text: Win32_QuickFixEngineering class
  href: /windows/desktop/CIMWin32Prov/win32-quickfixengineering
syntaxes:
- >-
  Get-HotFix [[-Id] <String[]>] [-ComputerName <String[]>] [-Credential <PSCredential>]

  [<CommonParameters>]
- >-
  Get-HotFix [-Description <String[]>] [-ComputerName <String[]>] [-Credential <PSCredential>]

  [<CommonParameters>]
examples:
- title: 'Example 1: Get all hotfixes on the local computer'
  code: |-
    Get-HotFix

    Source         Description      HotFixID      InstalledBy          InstalledOn
    ------         -----------      --------      -----------          -----------
    Server01       Update           KB4495590     NT AUTHORITY\SYSTEM  5/16/2019 00:00:00
    Server01       Security Update  KB4470788     NT AUTHORITY\SYSTEM  1/22/2019 00:00:00
    Server01       Update           KB4480056     NT AUTHORITY\SYSTEM  1/24/2019 00:00:00
  description: ""
  summary: |+
    The `Get-Hotfix` cmdlet gets all hotfixes installed on the local computer.

- title: 'Example 2: Get hotfixes from multiple computers filtered by a string'
  code: |-
    PS> Get-HotFix -Description Security* -ComputerName Server01, Server02 -Credential Domain01\admin01
  description: |-
    `Get-Hotfix` filters the output with the **Description** parameter and the string **Security** that
    includes the asterisk (`*`) wildcard. The **ComputerName** parameter includes a comma-separated
    string of remote computer names. The **Credential** parameter specifies a user account that has
    permission to access the remote computers and run commands.
  summary: |+
    The `Get-Hotfix` command uses parameters to get hotfixes installed on remote computers. The results
    are filtered by a specified description string.

- title: 'Example 3: Verify if an update is installed and write computer names to a file'
  code: |-
    PS> $A = Get-Content -Path ./Servers.txt
    PS> $A | ForEach-Object { if (!(Get-HotFix -Id KB957095 -ComputerName $_))
             { Add-Content $_ -Path ./Missing-KB957095.txt }}
  description: |-
    The `$A` variable contains computer names that were obtained by `Get-Content` from a text file. The
    objects in `$A` are sent down the pipeline to `ForEach-Object`. An `if` statement uses the
    `Get-Hotfix` cmdlet with the **Id** parameter and a specific Id number for each computer name. If a
    computer doesn't have the specified hotfix Id installed, the `Add-Content` cmdlet writes the
    computer name to a file.
  summary: |+
    The commands in this example verify whether a particular update installed. If the update isn't
    installed, the computer name is written to a text file.

- title: 'Example 4: Get the most recent hotfix on the local computer'
  code: |-
    (Get-HotFix | Sort-Object -Property InstalledOn)[-1]
  description: |-
    `Get-Hotfix` sends the objects down the pipeline to the `Sort-Object` cmdlet. `Sort-Object` sorts
    objects by ascending order and uses the **Property** parameter to evaluate each **InstalledOn**
    date. The array notation `[-1]` selects the most recent installed hotfix.
  summary: |+
    This example gets the most recent hotfix installed on a computer.

parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ComputerName
  description: |+
    Specifies a remote computer. Type the NetBIOS name, an Internet Protocol (IP) address, or a fully
    qualified domain name (FQDN) of a remote computer.

    When the **ComputerName** parameter isn't specified, `Get-Hotfix` runs on the local computer.

    The **ComputerName** parameter doesn't rely on Windows PowerShell remoting. If your computer isn't
    configured to run remote commands, use the **ComputerName** parameter.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: CN, __Server, IPAddress
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user account that has permission to access the computer and run commands. The default is
    the current user

    Type a user name, such as **User01** or **Domain01\User01**, or enter a **PSCredential** object
    generated by the `Get-Credential` cmdlet. If you type a user name, you're prompted to enter the
    password.

    Credentials are stored in a [PSCredential](/dotnet/api/system.management.automation.pscredential)
    object and the password is stored as a [SecureString](/dotnet/api/system.security.securestring).

    > [!NOTE]
    > For more information about **SecureString** data protection, see
    > [How secure is SecureString?](/dotnet/api/system.security.securestring#how-secure-is-securestring).

  defaultValue: Current user
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Description
  description: |+
    `Get-HotFix` uses the **Description** parameter to specify hotfix types. Wildcards are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Id
  description: |+
    Filters the `Get-HotFix` results for specific hotfix Ids. Wildcards aren't accepted.

  defaultValue: None
  position: "0"
  aliases: HFID
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Management.Get-HotFix
name: Get-HotFix
description: |-
  The `Get-Hotfix` cmdlet gets hotfixes, or updates, that are installed on the local computer or
  specified remote computers. The updates can be installed by Windows Update, Microsoft Update,
  Windows Server Update Services, or manually installed.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 05/20/2019
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/get-hotfix?view=powershell-7&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-HotFix
