### YamlMime:PowershellCmdlet
summary: |-
  Configures the local computer for remote management.
module: Microsoft.WSMan.Management
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet doesn't accept any input.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet doesn't generate any output.
links:
- text: Connect-WSMan
  href: Connect-WSMan.yml
- text: Disable-WSManCredSSP
  href: Disable-WSManCredSSP.yml
- text: Disconnect-WSMan
  href: Disconnect-WSMan.yml
- text: Enable-PSRemoting
  href: ../Microsoft.PowerShell.Core/Enable-PSRemoting.yml
- text: Enable-WSManCredSSP
  href: Enable-WSManCredSSP.yml
- text: Get-WSManCredSSP
  href: Get-WSManCredSSP.yml
- text: Get-WSManInstance
  href: Get-WSManInstance.yml
- text: 'How To: Configure WINRM for HTTPS'
  href: https://support.microsoft.com/help/2019527/how-to-configure-winrm-for-https
- text: Invoke-WSManAction
  href: Invoke-WSManAction.yml
- text: New-PSSession
  href: ../Microsoft.PowerShell.Core/New-PSSession.yml
- text: New-WSManInstance
  href: New-WSManInstance.yml
- text: New-WSManSessionOption
  href: New-WSManSessionOption.yml
- text: Test-WSMan
  href: Test-WSMan.yml
syntaxes:
- Set-WSManQuickConfig [-UseSSL] [-Force] [-SkipNetworkProfileCheck] [<CommonParameters>]
examples:
- title: 'Example 1: Enable remote management of the local computer over HTTP'
  code: |-
    Set-WSManQuickConfig
  description: ""
  summary: |+
    This example sets the required configuration to enable remote management of the local computer. By
    default, this command creates a WS-Management listener on **HTTP**.

- title: 'Example 2: Enable remote management of the local computer over HTTPS'
  code: |-
    Set-WSManQuickConfig -UseSSL
  description: |-
    > [!NOTE]
    > **HTTPS** requires manual configuration. For more information, see the **UseSSL** parameter's
    > description.
  summary: |+
    This example sets the required configuration to enable remote management of the local computer. The
    **UseSSL** parameter specifies that **HTTPS** is used to communicate with the computer.

parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipNetworkProfileCheck
  description: |+
    Configures Windows client versions for remoting when the computer is on a public network. This
    parameter enables a firewall rule for public networks that allows remote access only from computers
    in the same local subnet.

    This parameter has no effect on server versions of Windows, that by default, have a local subnet
    firewall rule for public networks. If the local subnet firewall rule is disabled on the server
    version of Windows, `Enable-PSRemoting` re-enables it, regardless of this parameter's value.

    To remove the local subnet restriction and enable remote access from all locations on public
    networks, use the `Set-NetFirewallRule` cmdlet in the **NetSecurity** module.

    This parameter was introduced in PowerShell 3.0.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: UseSSL
  description: |+
    Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the
    remote computer. By default, SSL isn't used.

    WS-Management encrypts all the PowerShell content that is transmitted over the network. The
    **UseSSL** parameter lets you specify the additional protection of HTTPS instead of HTTP. If you use
    this parameter and SSL isn't available on the port that's used for the connection, the command
    fails.

    **HTTPS** requires manual configuration of WinRM and firewall rules. For more information, see
    [How To: Configure WINRM for HTTPS](https://support.microsoft.com/help/2019527/how-to-configure-winrm-for-https).

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Microsoft.WSMan.Management.Set-WSManQuickConfig
name: Set-WSManQuickConfig
description: |-
  The `Set-WSManQuickConfig` cmdlet configures the computer to receive PowerShell remote commands that
  are sent by using the Web Services for Management (WS-Management) technology.

  `Set-WSManQuickConfig` performs the following actions:

  - Checks whether the WinRM service is running. If the WinRM service isn't running, the service is
    started.
  - Sets the WinRM service startup type to automatic.
  - Creates a listener to accept requests on any IP address. The default transport is **HTTP**.
  - Enables a firewall exception for WinRM traffic.

  To run `Set-WSManQuickConfig`, start PowerShell with the **Run as Administrator** option.
metadata:
  external help file: Microsoft.WSMan.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.WSMan.Management
  ms.date: 10/02/2019
  online version: https://docs.microsoft.com/powershell/module/microsoft.wsman.management/set-wsmanquickconfig?view=powershell-7&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Set-WSManQuickConfig
