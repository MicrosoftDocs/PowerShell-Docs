### YamlMime:PowershellCmdlet
summary: |-
  Finds software packages in available package sources.
module: PackageManagement
notes: |-
  > [!IMPORTANT]
  > As of April 2020, the PowerShell Gallery no longer supports Transport Layer Security (TLS)
  > versions 1.0 and 1.1. If you are not using TLS 1.2 or higher, you will receive an error when
  > trying to access the PowerShell Gallery. Use the following command to ensure you are using TLS
  > 1.2:
  >
  > `[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12`
  >
  > For more information, see the
  > [announcement](https://devblogs.microsoft.com/powershell/powershell-gallery-tls-support/) in the
  > PowerShell blog.
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    `Find-Package` doesn't accept input from the pipeline.
outputs:
- name: <xref href="SoftwareIdentify" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: |-
    `Find-Package` outputs a **SoftwareIdentity** object.
links:
- text: about_PackageManagement
  href: ../Microsoft.PowerShell.Core/About/about_PackageManagement.md
- text: Get-Package
  href: Get-Package.yml
- text: Get-PackageProvider
  href: Get-PackageProvider.yml
- text: Get-PackageSource
  href: Get-PackageSource.yml
- text: Install-Package
  href: Install-Package.yml
- text: Save-Package
  href: Save-Package.yml
- text: Uninstall-Package
  href: Uninstall-Package.yml
syntaxes:
- >-
  Find-Package [-IncludeDependencies] [-AllVersions] [-Source <String[]>] [-Credential <PSCredential>]

   [-Proxy <Uri>] [-ProxyCredential <PSCredential>] [[-Name] <String[]>] [-RequiredVersion <String>]

   [-MinimumVersion <String>] [-MaximumVersion <String>] [-Force] [-ForceBootstrap]

   [-ProviderName <String[]>] [-ConfigFile <String>] [-SkipValidate] [-Headers <String[]>]

   [-FilterOnTag <String[]>] [-Contains <String>] [-AllowPrereleaseVersions] [<CommonParameters>]
- >-
  Find-Package [-IncludeDependencies] [-AllVersions] [-Source <String[]>] [-Credential <PSCredential>]

   [-Proxy <Uri>] [-ProxyCredential <PSCredential>] [[-Name] <String[]>] [-RequiredVersion <String>]

   [-MinimumVersion <String>] [-MaximumVersion <String>] [-Force] [-ForceBootstrap]

   [-ProviderName <String[]>] [-AllowPrereleaseVersions] [-PackageManagementProvider <String>]

   [-PublishLocation <String>] [-ScriptSourceLocation <String>] [-ScriptPublishLocation <String>]

   [-Type <String>] [-Filter <String>] [-Tag <String[]>] [-Includes <String[]>]

   [-DscResource <String[]>] [-RoleCapability <String[]>] [-Command <String[]>] [-AcceptLicense]

   [<CommonParameters>]
examples:
- title: 'Example 1: Find all available packages from a package provider'
  code: |-
    Find-Package -ProviderName NuGet

    Name               Version   Source     Summary
    ----               -------   ------     -------
    NUnit              3.11.0    MyNuGet    NUnit is a unit-testing framework for all .NET langua...
    Newtonsoft.Json    12.0.1    MyNuGet    Json.NET is a popular high-performance JSON framework...
    EntityFramework    6.2.0     MyNuGet    Entity Framework is Microsoft's recommended data acce...
    MySql.Data         8.0.15    MyNuGet    MySql.Data.MySqlClient .Net Core Class Library
    bootstrap          4.3.1     MyNuGet    Bootstrap framework in CSS. Includes fonts and JavaSc...
    NuGet.Core         2.14.0    MyNuGet    NuGet.Core is the core framework assembly for NuGet...
  description: |-
    `Find-Package` uses the **Provider** parameter to specify the provider **NuGet**.
  summary: |+
    This command finds all available PowerShell module packages in a registered gallery. Use
    `Get-PackageProvider` to get the provider name.

- title: 'Example 2: Find a package from a package source'
  code: |-
    Find-Package -Name NuGet.Core -Source MyNuGet

    Name         Version   Source    Summary
    ----         -------   ------    -------
    NuGet.Core   2.14.0    MyNuGet   NuGet.Core is the core framework assembly for NuGet...
  description: |-
    `Find-Package` uses the **Name** parameter to specify the package name **NuGet.Core**. The
    **Source** parameter specifies to search for the package in **MyNuGet**.
  summary: |+
    This command finds the newest version of a package from a specified package source. If a package
    source isn't provided, `Find-Package` searches each installed package provider and its package
    sources. Use `Get-PackageSource` to get the source name.

- title: 'Example 3: Find all versions of a package'
  code: |-
    Find-Package -Name NuGet.Core -Source MyNuGet -AllVersions

    Name          Version          Source       Summary
    ----          -------          ------       -------
    NuGet.Core    2.14.0           MyNuGet      NuGet.Core is the core framework assembly for NuGet...
    NuGet.Core    2.14.0-rtm-832   MyNuGet      NuGet.Core is the core framework assembly for NuGet...
    NuGet.Core    2.13.0           MyNuGet      NuGet.Core is the core framework assembly for NuGet...
    ...
    NuGet.Core    1.1.229.159      MyNuGet      NuGet.Core is the core framework assembly for NuGet...
    Nuget.Core    1.0.1120.104     MyNuGet      NuGet.Core is the core framework assembly for NuGet...
  description: |-
    `Find-Package` uses the **Name** parameter to specify the package **NuGet.Core**. The
    **ProviderName** parameter specifies to search for the package in **MyNuGet**. **AllVersions**
    specifies that all available versions are returned.
  summary: |+
    This command finds all available package versions from a specified provider.

- title: 'Example 4: Find a package with a specific name and version'
  code: |-
    Find-Package -Name NuGet.Core -ProviderName NuGet -RequiredVersion 2.9.0

    Name          Version          Source       Summary
    ----          -------          ------       -------
    NuGet.Core    2.9.0            MyNuGet      NuGet.Core is the core framework assembly for NuGet...
  description: |-
    `Find-Package` uses the **Name** parameter to specify the package name **NuGet.Core**. The
    **ProviderName** parameter specifies to search for the package in **NuGet**. **RequiredVersion**
    specifies that only version **2.9.0** is returned.
  summary: |+
    This command finds a specific package version from a specified provider.

- title: 'Example 5: Find packages within a range of versions'
  code: |-
    Find-Package -Name NuGet.Core -ProviderName NuGet -MinimumVersion 2.7.0 -MaximumVersion 2.9.0 -AllVersions

    Name          Version          Source       Summary
    ----          -------          ------       -------
    NuGet.Core    2.9.0            MyNuGet      NuGet.Core is the core framework assembly for NuGet...
    NuGet.Core    2.8.6            MyNuGet      NuGet.Core is the core framework assembly for NuGet...
    NuGet.Core    2.8.0            MyNuGet      NuGet.Core is the core framework assembly for NuGet...
    NuGet.Core    2.7.0            MyNuGet      NuGet.Core is the core framework assembly for NuGet...
  description: |-
    `Find-Package` uses the **Name** parameter to specify the package name **NuGet.Core**. The
    **ProviderName** parameter specifies to search for the package in **NuGet**. **MinimumVersion**
    specifies the lowest version **2.7.0**. **MaximumVersion** specifies the highest version **2.9.0**.
    **AllVersions** determines the range is returned as specified by the minimum and maximum.
  summary: |+
    This command finds a range of versions for a specified package.

- title: 'Example 6: Find a package from a file system'
  code: |-
    PS> Find-Package -Source C:\LocalPkg

    Name                 Version    Source           Summary
    ----                 -------    ------           -------
    Microsoft.Web.Xdt    3.0.0      C:\LocalPkg\     Microsoft Xml Document Transformation (XDT)...
    NuGet.Core           2.14.0     C:\LocalPkg\     NuGet.Core is the core framework assembly...
  description: ""
  summary: |+
    This command finds packages with the file extension `.nupkg` that are stored on the local computer.
    The files are packages downloaded from a gallery such as the **NuGet**.

parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: AcceptLicense
  description: |+
    Automatically accepts a license agreement if the package requires it.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllowPrereleaseVersions
  description: |+
    Includes packages marked as a prerelease in the results.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: AllVersions
  description: |+
    Indicates that `Find-Package` returns all available versions of the package. By default,
    `Find-Package` only returns the newest available version.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Command
  description: |+
    Specifies an array of commands searched by `Find-Package`.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ConfigFile
  description: |+
    Specifies a configuration file.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Contains
  description: |+
    `Find-Package` gets objects if any item in the object's property values are an exact match for the
    specified value.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user account that has permission to search for packages.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DscResource
  description: |+
    Specifies an array of Desired State Configuration (DSC) resources that this cmdlet searches.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Specifies terms to search for within the **Name** and **Description** properties.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: FilterOnTag
  description: |+
    Specifies the tag that filters the results. Results that don't contain the specified tag are
    excluded.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: ForceBootstrap
  description: |+
    Indicates that `Find-Package` forces **PackageManagement** to automatically install the package
    provider.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Headers
  description: |+
    Specifies the headers for the package.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeDependencies
  description: |+
    Indicates that this cmdlet includes package dependencies in the results.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Includes
  description: |+
    Specifies whether `Find-Package` should find all packages within a category.

    The accepted values are as follows:

    - Cmdlet
    - DscResource
    - Function
    - RoleCapability
    - Workflow

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Cmdlet, DscResource, Function, RoleCapability, Workflow
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: MaximumVersion
  description: |+
    Specifies the maximum package version that you want to find.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: MinimumVersion
  description: |+
    Specifies the minimum package version that you want to find. If a higher version is available, that
    version is returned.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies one or more package names, or package names with wildcard characters. Separate multiple
    package names with commas.

  defaultValue: None
  acceptWildcardCharacters: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PackageManagementProvider
  description: |+
    Specifies the name of a package management provider.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ProviderName
  description: |+
    Specifies one or more package provider names. Separate multiple package provider names with commas.
    Use `Get-PackageProvider` to get a list of available package providers.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Provider
  parameterValueGroup: Bootstrap, NuGet, PowerShellGet
- type: <xref href="System.Uri" data-throw-if-not-resolved="False" />
  name: Proxy
  description: |+
    Specifies a proxy server for the request, rather than a direct connection to the internet resource.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: ProxyCredential
  description: |+
    Specifies a user account that has permission to use the proxy server that is specified by the
    **Proxy** parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PublishLocation
  description: |+
    Specifies a location for publishing the package.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: RequiredVersion
  description: |+
    Specifies an exact package version that you want to find.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RoleCapability
  description: |+
    Specifies an array of role capabilities.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ScriptPublishLocation
  description: |+
    Specifies a script publishing location for the package.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ScriptSourceLocation
  description: |+
    Specifies a script source location.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipValidate
  description: |+
    Switch that skips package credential validation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Source
  description: |+
    Specifies one or more package sources. Use `Get-PackageSource` to get a list of available package
    sources. A file system directory can be used as a source for download packages.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Tag
  description: |+
    Specifies one or more strings to search for in the package metadata.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Type
  description: |+
    Specifies whether to search for packages with a module, a script, or either.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Module, Script, All
uid: PackageManagement.Find-Package
name: Find-Package
description: |-
  `Find-Package` finds software packages that are available in package sources. `Get-PackageProvider`
  and `Get-PackageSource` display details about your providers.
metadata:
  external help file: Microsoft.PowerShell.PackageManagement.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: PackageManagement
  ms.date: 04/03/2019
  online version: https://docs.microsoft.com/powershell/module/packagemanagement/find-package?view=powershell-7&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Find-Package
