### YamlMime:PowershellCmdlet
summary: |-
  Adds Package Management package providers to the current session.
module: PackageManagement
notes: |-
  > [!IMPORTANT]
  > As of April 2020, the PowerShell Gallery no longer supports Transport Layer Security (TLS)
  > versions 1.0 and 1.1. If you are not using TLS 1.2 or higher, you will receive an error when
  > trying to access the PowerShell Gallery. Use the following command to ensure you are using TLS
  > 1.2:
  >
  > `[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12`
  >
  > For more information, see the
  > [announcement](https://devblogs.microsoft.com/powershell/powershell-gallery-tls-support/) in the
  > PowerShell blog.
inputs:
- name: <xref href="Microsoft.PackageManagement.Implementation.PackageProvider" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a **PackageProvider** object returned by `Get-PackageProvider` into
    `Import-PackageProvider`.
links:
- text: about_PackageManagement
  href: ../Microsoft.PowerShell.Core/About/about_PackageManagement.md
- text: Unregister-PackageSource
  href: Unregister-PackageSource.yml
- text: Get-PackageSource
  href: Get-PackageSource.yml
- text: Register-PackageSource
  href: Register-PackageSource.yml
- text: Get-PackageProvider
  href: Get-PackageProvider.yml
syntaxes:
- >-
  Import-PackageProvider [-Name] <String[]> [-RequiredVersion <String>] [-MinimumVersion <String>]

   [-MaximumVersion <String>] [-Force] [-ForceBootstrap] [<CommonParameters>]
examples:
- title: 'Example 1: Import a package provider from the local computer'
  code: |-
    PS C:\> Import-PackageProvider -Name "Nuget"
  description: |-
    This command imports the Nuget provider after it has been installed on the local computer.
  summary: ""
- title: 'Example 2: Import a specific version of a package provider'
  code: |-
    PS C:\> Find-PackageProvider -Name "Nuget" -AllVersions
    Install-PackageProvider -Name "Nuget" -RequiredVersion "2.8.5.201" -Force
    Get-PackageProvider -ListAvailable
    Import-PackageProvider -Name "Nuget" -RequiredVersion "2.8.5.201" -Verbose
  description: |-
    This command finds, installs, and imports a specific version of the Nuget package provider.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.
    Re-imports a package provider.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: ForceBootstrap
  description: |+
    Indicates that this cmdlet forces Package Management to automatically install the package provider.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: MaximumVersion
  description: |+
    Specifies the maximum allowed version of the package provider that you want to import. If you do not
    add this parameter, `Import-PackageProvider` imports the highest available version of the provider.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: MinimumVersion
  description: |+
    Specifies the minimum allowed version of the package provider that you want to import. If you do not
    add this parameter, `Import-PackageProvider` imports the highest available version of the package
    that also satisfies any maximum version that is specified using the *MaximumVersion* parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies one or more package provider names. Wildcards are not permitted.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: RequiredVersion
  description: |+
    Specifies the exact version of the package provider that you want to import. If you do not add this
    parameter, `Import-PackageProvider` imports the highest available version of the provider that also
    satisfies any maximum version specified using the **MaximumVersion** parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: PackageManagement.Import-PackageProvider
name: Import-PackageProvider
description: |-
  The `Import-PackageProvider` cmdlet adds one or more package providers to the current session.
  The provider that you import must be installed on the local computer.

  To get a list of available providers, run `Get-PackageProvider -ListAvailable`.
  Note that a package provider name can be different from its module name.

  Due to security reasons, **PackageManagement** requires C#-based providers to contain a
  `provider.manifest`. For more information on how to build a provider with `provider.manifest`
  injected, see the `.csproj` project files on
  [https://github.com/oneget/oneget](https://github.com/oneget/oneget).
metadata:
  external help file: Microsoft.PowerShell.PackageManagement.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: PackageManagement
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/packagemanagement/import-packageprovider?view=powershell-7&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Import-PackageProvider
