### YamlMime:PowershellCmdlet
summary: |-
  Validates a comment block for a script.
module: PowerShellGet
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-ScriptFileInfo
  href: New-ScriptFileInfo.yml
- text: Publish-Script
  href: Publish-Script.yml
- text: Update-ScriptFileInfo
  href: Update-ScriptFileInfo.yml
syntaxes:
- Test-ScriptFileInfo [-Path] <String> [<CommonParameters>]
- Test-ScriptFileInfo -LiteralPath <String> [<CommonParameters>]
examples:
- title: 'Example 1: Test a script file'
  code: |-
    PS C:\> Test-ScriptFileInfo -Path "C:\temp\temp_scripts\New-ScriptFile.ps1"
    Version    Name                      Author               Description
    -------    ----                      ------               -----------
    1.0        New-ScriptFile            pattif               my new script file test
  description: |-
    This command tests the New-ScriptFile.ps1 script file and displays the results.
    The script file includes valid metadata.
  summary: ""
- title: 'Example 2: Test a script file that has values for all metadata properties'
  code: |-
    PS C:\> Test-ScriptFileInfo -Path "D:\code\Test-Runbook.ps1" | Format-List *
    Name                       : Test-Runbook
    Path                       : D:\code\Test-Runbook.ps1
    ScriptBase                 : D:\code
    ReleaseNotes               : {contoso script now supports following features, Feature 1, Feature 2, Feature 3...}
    Version                    : 1.0
    Guid                       : eb246b19-17da-4392-8c89-7c280f69ad0e
    Author                     : pattif
    CompanyName                : Microsoft Corporation
    Copyright                  : 2015 Microsoft Corporation. All rights reserved.
    Tags                       : {Tag1, Tag2, Tag3}
    LicenseUri                 : https://contoso.com/License
    ProjectUri                 : https://contoso.com/
    IconUri                    : https://contoso.com/MyScriptIcon
    ExternalModuleDependencies : ExternalModule1
    RequiredScripts            : {Start-WFContosoServer, Stop-ContosoServerScript}
    ExternalScriptDependencies : Stop-ContosoServerScript
    Description                : Contoso Script example
    RequiredModules            : {RequiredModule1, @{ ModuleName = 'RequiredModule2'; ModuleVersion = '1.0' }, @{ ModuleName = 'RequiredModule3'; RequiredVersion = '2.0' }, ExternalModule1}
    ExportedCommands           : {Test-WebUri, ValidateAndAdd-PSScriptInfoEntry, Get-PSScriptInfo, My-Workflow...}
    ExportedFunctions          : {Test-WebUri, ValidateAndAdd-PSScriptInfoEntry, Get-PSScriptInfo, My-AdvPSCmdlet}
    ExportedWorkflows          : My-Workflow
  description: |-
    This command tests the script file Test-Runbook.ps1 and uses the pipeline operator to pass the results to the Format-List cmdlet to format the results.
  summary: ""
- title: 'Example 3: Test a script file that has no metadata'
  code: |-
    PS C:\> Test-ScriptFileInfo -Path "D:\code\Hello-World.ps1"
    Test-ScriptFileInfo : Script 'D:\code\Hello-World.ps1' is missing required metadata properties. Verify that the script file has Version, Description
    and Author properties. You can use the Update-ScriptFileInfo or New-ScriptFileInfo cmdlet to add or update the PSScriptInfo to the script file.
    At line:1 char:1
    + Test-ScriptFileInfo D:\code\Hello-World.ps1
    + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (D:\code\Hello-World.ps1:String) [Test-ScriptFileInfo], ArgumentException

    + FullyQualifiedErrorId : MissingRequiredPSScriptInfoProperties,Test-ScriptFile
  description: |-
    This command tests the script file Hello-World.ps1, which has no metadata associated with it.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: LiteralPath
  isRequired: true
  description: |+
    Specifies a path to one or more locations.
    Unlike the *Path* parameter, the value of the *LiteralPath* parameter is used exactly as it is entered.
    No characters are interpreted as wildcards.
    If the path includes escape characters, enclose them in single quotation marks.
    Single quotation marks tell PowerShell not to interpret any characters as escape sequences.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: PSPath
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Path
  isRequired: true
  description: |+
    Specifies a path to one or more locations.
    Wildcards are permitted.
    The default location is the current directory (.).

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
uid: PowerShellGet.Test-ScriptFileInfo
name: Test-ScriptFileInfo
description: |-
  The **Test-ScriptFileInfo** cmdlet validates the comment block at the beginning of a script that will be published with the Publish-Script cmdlet.
  If the comment block has an error, this cmdlet returns information about where the error is located or how to correct it.
metadata:
  external help file: PSModule-help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: PowerShellGet
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/powershellget/test-scriptfileinfo?view=powershell-7.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Test-ScriptFileInfo
