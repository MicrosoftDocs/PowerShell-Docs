### YamlMime:PowershellCmdlet
summary: |-
  Creates a script file with metadata.
module: PowerShellGet
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: about_Splatting
  href: ../Microsoft.Powershell.Core/About/about_splatting.md
- text: Test-ScriptFileInfo
  href: Test-ScriptFileInfo.yml
- text: Update-ScriptFileInfo
  href: Update-ScriptFileInfo.yml
syntaxes:
- >-
  New-ScriptFileInfo [[-Path] <String>] [-Version <String>] [-Author <String>] -Description <String>

   [-Guid <Guid>] [-CompanyName <String>] [-Copyright <String>] [-RequiredModules <Object[]>]

   [-ExternalModuleDependencies <String[]>] [-RequiredScripts <String[]>]

   [-ExternalScriptDependencies <String[]>] [-Tags <String[]>] [-ProjectUri <Uri>] [-LicenseUri <Uri>]

   [-IconUri <Uri>] [-ReleaseNotes <String[]>] [-PrivateData <String>] [-PassThru] [-Force] [-WhatIf]

   [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Create a script file and specify its version, author, and description'
  code: |-
    $Parms = @{
      Path = "C:\Test\Temp-Scriptfile.ps1"
      Version = "1.0"
      Author = "pattif@contoso.com"
      Description = "My test script file description goes here"
      }
    New-ScriptFileInfo @Parms
    Get-Content -Path C:\Test\Temp-Scriptfile.ps1

    <#PSScriptInfo

    .VERSION 1.0

    .GUID 3bb10ee7-38c1-41b9-88ea-16899164fc19

    .AUTHOR pattif@contoso.com

    .COMPANYNAME

    .COPYRIGHT

    .TAGS

    .LICENSEURI

    .PROJECTURI

    .ICONURI

    .EXTERNALMODULEDEPENDENCIES

    .REQUIREDSCRIPTS

    .EXTERNALSCRIPTDEPENDENCIES

    .RELEASENOTES

    .PRIVATEDATA

    #>

    <#

    .DESCRIPTION
     My test script file description goes here

    #>
    Param()
  description: |-
    The `New-ScriptFileInfo` cmdlet uses splatting to configure several parameters for the script.
    **Path** sets the location and name of the script. **Version** specifies the script's version
    number. **Author** is the email address of the person who created the script. **Description**
    explains the script's purpose.

    After the script is created, `Get-Content` uses the **Path** parameter to locate the script. The
    script's contents are displayed in the PowerShell console.
  summary: |+
    In this example, a script file is created and its contents are displayed in the PowerShell console.

- title: 'Example 2: Test a script file'
  code: |-
    Test-ScriptFileInfo -Path C:\Test\Temp-Scriptfile.ps1

    Version   Name                  Author               Description
    -------   ----                  ------               -----------
    1.0       Temp-Scriptfile       pattif@contoso.com   My test script file description goes here
  description: |-
    The `Test-ScriptFileInfo` cmdlet uses the **Path** parameter to specify the script file's location.
  summary: |+
    In this example, the metadata for the script created in **Example 1** is tested.

- title: 'Example 3: Create a script file with all the metadata properties'
  code: |-
    $Parms = @{
     Path = "C:\Test\New-ScriptFile.ps1"
     Verbose = $True
     Version = "1.0"
     Author = "pattif@contoso.com"
     Description = "My new script file test"
     CompanyName = "Contoso Corporation"
     Copyright = "2019 Contoso Corporation. All rights reserved."
     ExternalModuleDependencies = "ff","bb"
     RequiredScripts = "Start-WFContosoServer", "Stop-ContosoServerScript"
     ExternalScriptDependencies = "Stop-ContosoServerScript"
     Tags = @("Tag1", "Tag2", "Tag3")
     ProjectUri = "https://contoso.com"
     LicenseUri = "https://contoso.com/License"
     IconUri = "https://contoso.com/Icon"
     PassThru = $True
     ReleaseNotes = @("Contoso script now supports the following features:",
       "Feature 1",
       "Feature 2",
       "Feature 3",
       "Feature 4",
       "Feature 5")
     RequiredModules =
       "1",
       "2",
       "RequiredModule1",
       @{ModuleName="RequiredModule2";ModuleVersion="1.0"},
       @{ModuleName="RequiredModule3";RequiredVersion="2.0"},
       "ExternalModule1"
     }
    New-ScriptFileInfo @Parms

    VERBOSE: Performing the operation "Creating the 'C:\Test\New-ScriptFile.ps1'
      PowerShell Script file" on target "C:\Test\New-ScriptFile.ps1".

    <#PSScriptInfo

    .VERSION 1.0

    .GUID 4fabe8c7-7862-45b1-a72e-1352a433b77d

    .AUTHOR pattif@contoso.com

    .COMPANYNAME Contoso Corporation

    .COPYRIGHT 2019 Contoso Corporation. All rights reserved.

    .TAGS Tag1 Tag2 Tag3

    .LICENSEURI https://contoso.com/License

    .PROJECTURI https://contoso.com/

    .ICONURI https://contoso.com/Icon

    .EXTERNALMODULEDEPENDENCIES ff,bb

    .REQUIREDSCRIPTS Start-WFContosoServer,Stop-ContosoServerScript

    .EXTERNALSCRIPTDEPENDENCIES Stop-ContosoServerScript

    .RELEASENOTES
    Contoso script now supports the following features:
    Feature 1
    Feature 2
    Feature 3
    Feature 4
    Feature 5

    .PRIVATEDATA

    #>

    #Requires -Module 1
    #Requires -Module 2
    #Requires -Module RequiredModule1
    #Requires -Module @{ModuleName = 'RequiredModule2'; ModuleVersion = '1.0'}
    #Requires -Module @{RequiredVersion = '2.0'; ModuleName = 'RequiredModule3'}
    #Requires -Module ExternalModule1

    <#

    .DESCRIPTION
     My new script file test

    #>
    Param()
  description: ""
  summary: |+
    This example uses splatting to create a script file named `New-ScriptFile.ps1` that includes all its
    metadata properties. The **Verbose** parameter specifies that verbose output is displayed as the
    script is created.

parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Author
  description: |+
    Specifies the script author.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: CompanyName
  description: |+
    Specifies the company or vendor who created the script.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the `New-ScriptFileInfo`.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Copyright
  description: |+
    Specifies a copyright statement for the script.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Description
  isRequired: true
  description: |+
    Specifies a description for the script.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ExternalModuleDependencies
  description: |+
    Specifies an array of external module dependencies.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ExternalScriptDependencies
  description: |+
    Specifies an array of external script dependencies.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  name: Guid
  description: |+
    Specifies a unique ID for the script.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Uri" data-throw-if-not-resolved="False" />
  name: IconUri
  description: |+
    Specifies the URL of an icon for the script. The specified icon is displayed on the gallery web page
    for the script.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Uri" data-throw-if-not-resolved="False" />
  name: LicenseUri
  description: |+
    Specifies the URL of licensing terms.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object that represents the item with which you're working. By default,
    `New-ScriptFileInfo` doesn't generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Path
  description: |+
    Specifies the location where the script file is saved.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PrivateData
  description: |+
    Specifies private data for the script.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Uri" data-throw-if-not-resolved="False" />
  name: ProjectUri
  description: |+
    Specifies the URL of a web page about this project.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ReleaseNotes
  description: |+
    Specifies a string array that contains release notes or comments that you want available to users of
    this version of the script.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Object" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RequiredModules
  description: |+
    Specifies modules that must be in the global session state. If the required modules aren't in the
    global session state, PowerShell imports them.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RequiredScripts
  description: |+
    Specifies an array of required scripts.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Tags
  description: |+
    Specifies an array of tags.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Version
  description: |+
    Specifies the version of the script.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if `New-ScriptFileInfo` runs. The cmdlet isn't run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: PowerShellGet.New-ScriptFileInfo
name: New-ScriptFileInfo
description: |-
  The `New-ScriptFileInfo` cmdlet creates a PowerShell script file, including metadata about the
  script.

  The examples use splatting to pass parameters to the `New-ScriptFileInfo` cmdlet. For more
  information, see [about_Splatting](../Microsoft.Powershell.Core/About/about_splatting.md).
metadata:
  external help file: PSModule-help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: PowerShellGet
  ms.date: 07/01/2019
  online version: https://docs.microsoft.com/powershell/module/powershellget/new-scriptfileinfo?view=powershell-7.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-ScriptFileInfo
