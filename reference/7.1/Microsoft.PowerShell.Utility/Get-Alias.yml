### YamlMime:PowershellCmdlet
summary: |-
  Gets the aliases for the current session.
module: Microsoft.PowerShell.Utility
notes: |-
  - To create a new alias, use Set-Alias or New-Alias. To delete an alias, use Remove-Item.
  - The arrow-based alias name format is not used for aliases that include a hyphen. These are likely to be preferred substitute names for cmdlets and functions, instead of typical abbreviations or nicknames.
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe alias names to **Get-Alias**.
outputs:
- name: <xref href="System.Management.Automation.AliasInfo" data-throw-if-not-resolved="False" />
  description: |-
    **Get-Alias** returns an object that represents each alias.
    **Get-Alias** returns the same object for every alias, but PowerShell uses an arrow-based format to display the names of non-hyphenated aliases.
links:
- text: Export-Alias
  href: Export-Alias.yml
- text: Import-Alias
  href: Import-Alias.yml
- text: New-Alias
  href: New-Alias.yml
- text: Set-Alias
  href: Set-Alias.yml
- text: Alias Provider
  href: ../Microsoft.PowerShell.Core/About/about_Alias_Provider.md
- text: about_Aliases
  href: ../Microsoft.PowerShell.Core/About/about_Aliases.md
syntaxes:
- Get-Alias [[-Name] <String[]>] [-Exclude <String[]>] [-Scope <String>] [<CommonParameters>]
- Get-Alias [-Exclude <String[]>] [-Scope <String>] [-Definition <String[]>] [<CommonParameters>]
examples:
- title: 'Example 1: Get all aliases in the current session'
  code: |-
    PS C:\> Get-Alias

    CommandType     Name
    -----------     ----
    Alias           % -> ForEach-Object
    Alias           ? -> Where-Object
    Alias           ac -> Add-Content
    Alias           asnp -> Add-PSSnapin
    Alias           cat -> Get-Content
    Alias           cd -> Set-Location
    Alias           chdir -> Set-Location
    Alias           clc -> Clear-Content
    Alias           clear -> Clear-Host
    Alias           clhy -> Clear-History
    ...
  description: |-
    This command gets all aliases in the current session.

    The output shows the `<alias> -> <definition>` format that was introduced in Windows PowerShell 3.0.
    This format is used only for aliases that do not include hyphens, because aliases with hyphens are typically preferred names for cmdlets and functions, rather than nicknames.
  summary: ""
- title: 'Example 2: Get aliases by name'
  code: |-
    Get-Alias -Name gp*, sp* -Exclude *ps
  description: |-
    This command gets all aliases that begin with gp or sp, except for aliases that end with ps.
  summary: ""
- title: 'Example 3: Get aliases for a cmdlet'
  code: |-
    Get-Alias -Definition Get-ChildItem
  description: |-
    This command gets the aliases for the Get-ChildItem cmdlet.

    By default, the **Get-Alias** cmdlet gets the item name when you know the alias.
    The *Definition* parameter gets the alias when you know the item name.
  summary: ""
- title: 'Example 4: Get aliases by property'
  code: |-
    Get-Alias | Where-Object {$_.Options -Match "ReadOnly"}
  description: |-
    This command gets all aliases in which the value of the Options property is ReadOnly.
    This command provides a quick way to find the aliases that are built into PowerShell, because they have the ReadOnly option.

    Options is just one property of the AliasInfo objects that **Get-Alias** gets.
    To find all properties and methods of AliasInfo objects, type `Get-Alias | get-member`.
  summary: ""
- title: 'Example 5: Get aliases by name and filter by beginning letter'
  code: |-
    Get-Alias -Definition "*-PSSession" -Exclude e* -Scope Global
  description: |-
    This example gets aliases for commands that have names that end in "-PSSession", except for those that begin with "e".

    The command uses the *Scope* parameter to apply the command in the global scope.
    This is useful in scripts when you want to get the aliases in the session.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Definition
  description: |+
    Gets the aliases for the specified item.
    Enter the name of a cmdlet, function, script, file, or executable file.

    This parameter is called *Definition*, because it searches for the item name in the Definition property of the alias object.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Exclude
  description: |+
    Omits the specified items.
    The value of this parameter qualifies the Name and Definition parameters.
    Enter a name, a definition, or a pattern, such as "s*".
    Wildcards are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies the aliases that this cmdlet gets.
    Wildcards are permitted.
    By default, `Get-Alias` retrieves all aliases defined for the current session.
    The parameter name **Name** is optional.
    You can also pipe alias names to `Get-Alias`.

  defaultValue: All aliases
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Scope
  description: |+
    Specifies the scope for which this cmdlet gets aliases.
    The acceptable values for this parameter are:

    - Global
    - Local
    - Script
    - A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent)

    Local is the default.
    For more information, see about_Scopes.

  defaultValue: Local
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Utility.Get-Alias
name: Get-Alias
description: |-
  The **Get-Alias** cmdlet gets the aliases in the current session.
  This includes built-in aliases, aliases that you have set or imported, and aliases that you have added to your PowerShell profile.

  By default, **Get-Alias** takes an alias and returns the command name.
  When you use the *Definition* parameter, **Get-Alias** takes a command name and returns its aliases.

  Beginning in Windows PowerShell 3.0, **Get-Alias** displays non-hyphenated alias names in an `<alias> -> <definition>` format to make it even easier to find the information that you need.
metadata:
  external help file: Microsoft.PowerShell.Commands.Utility.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Utility
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.utility/get-alias?view=powershell-7.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-Alias
