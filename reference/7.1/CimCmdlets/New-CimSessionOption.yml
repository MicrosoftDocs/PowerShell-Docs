### YamlMime:PowershellCmdlet
summary: |-
  Specifies advanced options for the New-CimSession cmdlet.
module: CimCmdlets
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet accepts no input objects.
outputs:
- name: <xref href="CIMSessionOption" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet returns an object that contains CIM session options information.
links:
- text: Get-ChildItem
  href: ../microsoft.powershell.management/get-childitem.yml
- text: Get-Credential
  href: ../microsoft.powershell.security/get-credential.yml
- text: Get-Culture
  href: ../microsoft.powershell.utility/get-culture.yml
- text: Get-Item
  href: ../microsoft.powershell.management/get-item.yml
- text: New-CimSession
  href: New-CimSession.yml
syntaxes:
- >-
  New-CimSessionOption [-Protocol] <ProtocolType> [-UICulture <CultureInfo>] [-Culture <CultureInfo>]

   [<CommonParameters>]
- >-
  New-CimSessionOption [-NoEncryption] [-SkipCACheck] [-SkipCNCheck] [-SkipRevocationCheck]

   [-EncodePortInServicePrincipalName] [-Encoding <PacketEncoding>] [-HttpPrefix <Uri>]

   [-MaxEnvelopeSizeKB <UInt32>] [-ProxyAuthentication <PasswordAuthenticationMechanism>]

   [-ProxyCertificateThumbprint <String>] [-ProxyCredential <PSCredential>] [-ProxyType <ProxyType>]

   [-UseSsl] [-UICulture <CultureInfo>] [-Culture <CultureInfo>] [<CommonParameters>]
- >-
  New-CimSessionOption [-Impersonation <ImpersonationType>] [-PacketIntegrity] [-PacketPrivacy]

   [-UICulture <CultureInfo>] [-Culture <CultureInfo>] [<CommonParameters>]
examples:
- title: 'Example 1: Create a CIM session options object for DCOM'
  code: |-
    $so = New-CimSessionOption -Protocol DCOM
    New-CimSession -ComputerName Server01 -SessionOption $so
  description: ""
  summary: |+
    This example creates a CIM session options object for the DCOM protocol and stores it in a variable
    named `$so`. The contents of the variable are then passed to the `New-CimSession` cmdlet.
    `New-CimSession` then creates a new CIM session with the remote server named Server01, using the
    options defined in the variable.

- title: 'Example 2: Create a CIM session options object for WsMan'
  code: |-
    New-CimSessionOption -ProxyAuthentication Kerberos -ProxyCredential $cred -SkipCACheck -SkipCNCheck -UseSsl
  description: ""
  summary: |+
    This example creates a CIM session options object for the WsMan protocol. The object contains
    configuration for the authentication mode of **Kerberos** specified by the **ProxyAuthentication**
    parameter, the credentials specified by the **ProxyCredential** parameter, and specifies that the
    command is to skip the CA check, skip the CN check, and use SSL.

- title: 'Example 3: Create a CIM session options object with the culture specified'
  code: |-
    New-CimSessionOption -Culture Fr-Fr -Protocol Wsman
  description: |-
    This example specifies the culture that is used for the CIM session. By default, the culture of the
    client is used when performing operations. However, the default culture can be overridden using the
    **Culture** parameter.
  summary: ""
parameters:
- type: <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="False" />
  name: Culture
  description: |+
    Specifies the user interface culture to use for the CIM session. Specify the value for this
    parameter using one of the following formats:

    - A culture name in `<languagecode2>-<country/regioncode2>` format such as "EN-US".
    - A variable that contains a **CultureInfo** object.
    - A command that gets a **CultureInfo** object, such as [Get-Culture](../Microsoft.PowerShell.Utility/Get-Culture.yml)

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: EncodePortInServicePrincipalName
  description: |+
    Indicates that the Kerberos connection is connecting to a service whose service principal name (SPN)
    includes the service port number. This type of connection is not common.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Management.Infrastructure.Options.PacketEncoding" data-throw-if-not-resolved="False" />
  name: Encoding
  description: |+
    Specifies the encoding used for the WsMan protocol. The acceptable values for this parameter are:
    **Default**, **Utf8**, or **Utf16**.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: Default, Utf8, Utf16
- type: <xref href="System.Uri" data-throw-if-not-resolved="False" />
  name: HttpPrefix
  description: |+
    Specifies the part of the HTTP URL after the computer name and port number. Changing this is not
    common. By default, the value of this parameter is **/wsman**.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Management.Infrastructure.Options.ImpersonationType" data-throw-if-not-resolved="False" />
  name: Impersonation
  description: |+
    Creates a DCOM session to Windows Management Instrumentation (WMI) using impersonation.

    Valid values for this parameter are:

    - Default: DCOM can choose the impersonation level using its normal security negotiation algorithm.
    - None: The client is anonymous to the server. The server process can impersonate the client, but
      the impersonation token does not contain any information and cannot be used.
    - Identify: Allows objects to query the credentials of the caller.
    - Impersonate: Allows objects to use the credentials of the caller.
    - Delegate: Allows objects to permit other objects to use the credentials of the caller.

    If **Impersonation** is not specified, the `New-CimSession` cmdlet uses the value of
    **Impersonate**.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Default, None, Identify, Impersonate, Delegate
- type: <xref href="System.UInt32" data-throw-if-not-resolved="False" />
  name: MaxEnvelopeSizeKB
  description: |+
    Specifies the size limit of WsMan XML messages for either direction.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoEncryption
  description: |+
    Specifies that data encryption is turned off.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PacketIntegrity
  description: |+
    Specifies that the DCOM session created to WMI uses the Component Object Model (COM)
    _PacketIntegrity_ functionality. By default, all CIM sessions created using DCOM have the
    **PacketIntegrity** parameter set to **True**.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PacketPrivacy
  description: |+
    Creates a DCOM session to WMI using the COM _PacketPrivacy_. By default, all CIM sessions created
    using DCOM have the **PacketPrivacy** parameter set to **true**.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Management.Infrastructure.CimCmdlets.ProtocolType" data-throw-if-not-resolved="False" />
  name: Protocol
  isRequired: true
  description: |+
    Specifies the protocol to use. The acceptable values for this parameter are: **DCOM**, **Default**,
    or **Wsman**.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: Dcom, Default, Wsman
- type: <xref href="Microsoft.Management.Infrastructure.Options.PasswordAuthenticationMechanism" data-throw-if-not-resolved="False" />
  name: ProxyAuthentication
  description: |+
    Specifies the authentication method to use for proxy resolution. The acceptable values for this
    parameter are: **Default**, **Digest**, **Negotiate**, **Basic**, **Kerberos**, **NtlmDomain**, or
    **CredSsp**.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: Default, Digest, Negotiate, Basic, Kerberos, NtlmDomain, CredSsp
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ProxyCertificateThumbprint
  description: |+
    Specifies the (x.509) digital public key certificate of a user account for proxy authentication.
    Enter the certificate thumbprint of the certificate. Certificates are used in client
    certificate-based authentication. They can only be mapped to local user accounts and they do not
    work with domain accounts.

    To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` cmdlets in the PowerShell
    Cert: drive.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: ProxyCredential
  description: |+
    Specifies the credentials to use for proxy authentication. Enter one of the following:

    - A variable that contains a PSCredential object.
    - A command that gets a PSCredential object, such as `Get-Credential`

    If this option is not set, then you cannot specify any credentials.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Management.Infrastructure.Options.ProxyType" data-throw-if-not-resolved="False" />
  name: ProxyType
  description: |+
    Specifies the host name resolution mechanism to use. The acceptable values for this parameter are:
    **None**, **WinHttp**, **Auto**, or **InternetExplorer**.

    The default value of this parameter is **InternetExplorer**.

  defaultValue: InternetExplorer
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: None, WinHttp, Auto, InternetExplorer
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipCACheck
  description: |+
    Indicates that when connecting over HTTPS, the client does not validate that the server certificate
    is signed by a trusted certification authority (CA).

    Use this parameter only when the remote computer is trusted using another mechanism, such as when
    the remote computer is part of a network that is physically secure and isolated, or when the remote
    computer is listed as a trusted host in a WinRM configuration.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipCNCheck
  description: |+
    Indicates that the certificate common name (CN) of the server does not need to match the hostname of
    the server. Use this parameter for remote operations only with trusted computers that use the HTTPS
    protocol.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipRevocationCheck
  description: |+
    Indicates that the revocation check for server certificates is skipped. Use this parameter only for
    trusted computers.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="False" />
  name: UICulture
  description: |+
    Specifies the user interface culture to use for the CIM session. Specify the value for this
    parameter using one of the following formats:

    - A culture name in `<languagecode2>-<country/regioncode2>` format such as "EN-US".
    - A variable that contains a CultureInfo object.
    - A command that gets a CultureInfo object, such as `Get-Culture`.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: UseSsl
  description: |+
    Indicates that SSL should be used to establish a connection to the remote computer. By default, SSL
    is not used. WsMan encrypts all content that is transmitted over the network, even when using HTTP.

    This parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not
    available on the port used for the connection and you specify this parameter, then the command
    fails.

    It is recommended that you use this parameter only when the **PacketPrivacy** parameter is not
    specified.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: CimCmdlets.New-CimSessionOption
name: New-CimSessionOption
description: |-
  The `New-CimSessionOption` cmdlet creates an instance of a CIM session options object. You use a CIM
  session options object as input to the `New-CimSession` cmdlet to specify the options for a CIM
  session.

  This cmdlet has two parameter sets, one for WsMan options and one for Distributed Component Object
  Model (DCOM) options. Depending on which parameters you use, the cmdlet returns either an instance
  of DCOM session options or returns WsMan session options.
metadata:
  external help file: Microsoft.Management.Infrastructure.CimCmdlets.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: CimCmdlets
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/cimcmdlets/new-cimsessionoption?view=powershell-7.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: New-CimSessionOption
