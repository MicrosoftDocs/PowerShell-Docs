### YamlMime:PowershellCmdlet
summary: |-
  Creates a record of all or part of a PowerShell session to a text file.
module: Microsoft.PowerShell.Host
notes: |-
  To stop a transcript, use the `Stop-Transcript` cmdlet.

  To record an entire session, add the `Start-Transcript` command to your profile. For more
  information, see [about_Profiles](../Microsoft.PowerShell.Core/About/about_Profiles.md).
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    You cannot pipe objects to this cmdlet.
outputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet returns a string that contains a confirmation message and the path to the output file.
links:
- text: Stop-Transcript
  href: Stop-Transcript.yml
syntaxes:
- >-
  Start-Transcript [[-Path] <String>] [-Append] [-Force] [-NoClobber] [-IncludeInvocationHeader]

   [-UseMinimalHeader] [-WhatIf] [-Confirm]  [<CommonParameters>]
- >-
  Start-Transcript [[-LiteralPath] <String>] [-Append] [-Force] [-NoClobber]

   [-IncludeInvocationHeader] [-UseMinimalHeader] [-WhatIf] [-Confirm]  [<CommonParameters>]
- >-
  Start-Transcript [[-OutputDirectory] <String>] [-Append] [-Force] [-NoClobber]

   [-IncludeInvocationHeader] [-UseMinimalHeader] [-WhatIf] [-Confirm]  [<CommonParameters>]
examples:
- title: 'Example 1: Start a transcript file with default settings'
  code: |-
    Start-Transcript
  description: |-
    This command starts a transcript in the default file location.
  summary: ""
- title: 'Example 2: Start a transcript file at a specific location'
  code: |-
    Start-Transcript -Path "C:\transcripts\transcript0.txt" -NoClobber
  description: |-
    This command starts a transcript in the `Transcript0.txt` file in `C:\transcripts`. Since the
    **NoClobber** parameter is used, the command prevents any existing files from being overwritten. If
    the `Transcript0.txt` file already exists, the command fails.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Append
  description: |+
    Indicates that this cmdlet adds the new transcript to the end of an existing file. Use the **Path**
    parameter to specify the file.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Allows the cmdlet to append the transcript to an existing read-only file. When used on a read-only
    file, the cmdlet changes the file permission to read-write. The cmdlet cannot override security
    restrictions when this parameter is used.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeInvocationHeader
  description: |+
    Indicates that this cmdlet logs the time stamp when commands are run.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: LiteralPath
  description: |+
    Specifies a location to the transcript file. Unlike the **Path** parameter, the value of the
    **LiteralPath** parameter is used exactly as it is typed. No characters are interpreted as
    wildcards. If the path includes escape characters, enclose it in single quotation marks. Single
    quotation marks inform PowerShell not to interpret any characters as escape sequences.

  defaultValue: None
  position: "0"
  aliases: PSPath, LP
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoClobber
  description: |+
    Indicates that this cmdlet will not overwrite of an existing file. By default, if a transcript file
    exists in the specified path, `Start-Transcript` overwrites the file without warning.

  defaultValue: None
  position: Named
  aliases: NoOverwrite
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: OutputDirectory
  description: |+
    Specifies a specific path and folder in which to save a transcript. PowerShell automatically assigns
    the transcript name.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Path
  description: |+
    Specifies a location to the transcript file. Enter a path to a `.txt` file. Wildcards are not
    permitted.

    If you do not specify a path, `Start-Transcript` uses the path in the value of the `$Transcript`
    global variable. If you have not created this variable, `Start-Transcript` stores the transcripts in
    the `$Home\My Documents directory as \PowerShell_transcript.<time-stamp>.txt` files.

    If any of the directories in the path do not exist, the command fails.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: UseMinimalHeader
  description: |+
    Prepend a short header to the transcript, instead of the detailed header included by default. This
    parameter was added in PowerShell 6.2.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Host.Start-Transcript
name: Start-Transcript
description: |-
  The `Start-Transcript` cmdlet creates a record of all or part of a PowerShell session to a text
  file. The transcript includes all command that the user types and all output that appears on the
  console.

  Starting in Windows PowerShell 5.0, `Start-Transcript` includes the hostname in the generated file
  name of all transcripts. This is especially useful when your enterprise's logging is centralized.
  Files that are created by the `Start-Transcript` cmdlet include random characters in names to
  prevent potential overwrites or duplication when two or more transcripts are started simultaneously.
  This also prevents unauthorized discovery of transcripts that are stored in a centralized file
  share.

  When using the **Append** parameter, if the target file doesn't have a Byte Order Mark (BOM)
  `Start-Transcript` defaults to `ASCII` encoding in the target file. This behavior can result in
  improper encoding of mulitbyte characters in the transcript.
metadata:
  external help file: Microsoft.PowerShell.ConsoleHost.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Host
  ms.date: 01/26/2021
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-7.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Start-Transcript
