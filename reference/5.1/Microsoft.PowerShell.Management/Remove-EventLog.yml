### YamlMime:PowershellCmdlet
summary: |-
  Deletes an event log or unregisters an event source.
module: Microsoft.PowerShell.Management
notes: |-
  * To use **Remove-EventLog** on Windows Vista and later versions of the Windows operating system, start Windows PowerShell by using the Run as administrator option.

    If you remove an event log and then re-create the log, you will not be able to register the same event sources.
  Applications that used the events sources to write entries to the original log will not be able to write to the new log.

  * When you unregister an event source for a particular log, the event source might be prevented from writing entries in other event logs.
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    You cannot pipe input to this cmdlet.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet does not return any output.
links:
- text: Clear-EventLog
  href: Clear-EventLog.yml
- text: Get-EventLog
  href: Get-EventLog.yml
- text: Limit-EventLog
  href: Limit-EventLog.yml
- text: New-EventLog
  href: New-EventLog.yml
- text: Remove-EventLog
  href: Remove-EventLog.yml
- text: Show-EventLog
  href: Show-EventLog.yml
- text: Write-EventLog
  href: Write-EventLog.yml
syntaxes:
- Remove-EventLog [[-ComputerName] <String[]>] [-LogName] <String[]> [-WhatIf] [-Confirm] [<CommonParameters>]
- Remove-EventLog [[-ComputerName] <String[]>] [-Source <String[]>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Remove an event log from the local computer'
  code: |-
    PS C:\> Remove-EventLog -LogName "MyLog"
  description: |-
    This command deletes the MyLog event log from the local computer and unregisters its event sources.
  summary: ""
- title: 'Example 2: Remove an event log from several computers'
  code: |-
    PS C:\> Remove-EventLog -LogName "MyLog", "TestLog" -ComputerName "Server01", "Server02", "localhost"
  description: |-
    This command deletes the MyLog and TestLog event logs from the local computer and the Server01 and Server02 remote computers.
    The command also unregisters the event sources for these logs.
  summary: ""
- title: 'Example 3: Delete an event source'
  code: |-
    PS C:\> Remove-EventLog -Source "MyApp"
  description: |-
    This command deletes the MyApp event source from the logs on the local computer.
    When the command finishes, the MyApp program cannot write to any event logs.
  summary: ""
- title: 'Example 4: Remove an event log and confirm the action'
  code: |-
    The first command lists the event logs on the local computer.
    PS C:\> Get-EventLog -List
    Max(K) Retain OverflowAction        Entries Log
    ------ ------ --------------        ------- ---
    15,168      0 OverwriteAsNeeded      22,923 Application
    15,168      0 OverwriteAsNeeded          53 DFS Replication
    15,168      7 OverwriteOlder              0 Hardware Events
    512      7 OverwriteOlder              0 Internet Explorer
    20,480      0 OverwriteAsNeeded           0 Key Management Service
    30,016      0 OverwriteAsNeeded      50,060 Security
    15,168      0 OverwriteAsNeeded      27,592 System
    15,360      0 OverwriteAsNeeded      18,355 Windows PowerShell
    15,168      7 OverwriteAsNeeded          12 ZapLog

    The second command deletes the ZapLog event log.
    PS C:\> Remove-EventLog -LogName "ZapLog"

    The third command lists the event logs again. The ZapLog event log no longer appears in the list.
    PS C:\> Get-EventLog -List
    Max(K) Retain OverflowAction        Entries Log
    ------ ------ --------------        ------- ---
    15,168      0 OverwriteAsNeeded      22,923 Application
    15,168      0 OverwriteAsNeeded          53 DFS Replication
    15,168      7 OverwriteOlder              0 Hardware Events
    512      7 OverwriteOlder              0 Internet Explorer
    20,480      0 OverwriteAsNeeded           0 Key Management Service
    30,016      0 OverwriteAsNeeded      50,060 Security
    15,168      0 OverwriteAsNeeded      27,592 System
    15,360      0 OverwriteAsNeeded      18,355 Windows PowerShell
  description: |-
    These commands show how to list the event logs on a computer and verify that a **Remove-EventLog** command was successful.
  summary: ""
- title: 'Example 5: Remove an event source and confirm the action'
  code: |-
    PS C:\> Get-WmiObject win32_nteventlogfile -Filter "logfilename='TestLog'" | foreach {$_.sources}
    MyApp
    TestApp
    PS C:\> Remove-Eventlog -Source "MyApp"
    PS C:\> Get-WmiObject win32_nteventlogfile -Filter "logfilename='TestLog'"} | foreach {$_.sources}
    TestApp
  description: |-
    These commands use the Get-WmiObject cmdlet to list the event sources on the local computer.
    You can these commands to verify the success of a command or to delete an event source.

    The first command gets the event sources of the TestLog event log on the local computer.
    MyApp is one of the sources.

    The second command uses the *Source* parameter of **Remove-EventLog** to delete the MyApp event source.

    The third command is identical to the first.
    It shows that the MyApp event source was deleted.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ComputerName
  description: |+
    Specifies a remote computer.
    The default is the local computer.

    Type the NetBIOS name, an IP address, or a fully qualified domain name of a remote computer.
    To specify the local computer, type the computer name, a dot (.), or localhost.

    This parameter does not rely on Windows PowerShell remoting.
    You can use the *ComputerName* parameter of **Remove-EventLog** even if your computer is not configured to run remote commands.

  defaultValue: None
  position: "1"
  aliases: CN
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: LogName
  isRequired: true
  description: |+
    Specifies the event logs.
    Enter the log name of one or more event logs, separated by commas.
    The log name is the value of the **Log** property, not the *LogDisplayName*, Wildcard characters are not permitted.
    This parameter is required.

  defaultValue: None
  position: "0"
  aliases: LN
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Source
  description: |+
    Specifies the event sources that this cmdlet unregisters.
    Enter the source names, not the executable name, separated by commas.

  defaultValue: None
  position: Named
  aliases: SRC
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Management.Remove-EventLog
name: Remove-EventLog
description: |-
  The **Remove-EventLog** cmdlet deletes an event log file from a local or remote computer and unregisters all its event sources for the log.
  You can also use this cmdlet to unregister event sources without deleting any event logs.

  The cmdlets that contain the **EventLog** noun, the **EventLog** cmdlets, work only on classic event logs.
  To get events from logs that use the Windows Event Log technology in Windows Vista and later versions of the Windows operating system, use Get-WinEvent.

  CAUTION: This cmdlet can delete operating system event logs, which might cause application failures and unexpected system behavior.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/remove-eventlog?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Remove-EventLog
