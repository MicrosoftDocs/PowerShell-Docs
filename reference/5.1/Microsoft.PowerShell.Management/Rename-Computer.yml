### YamlMime:PowershellCmdlet
summary: |-
  Renames a computer.
module: Microsoft.PowerShell.Management
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet does not have parameters that take input by value. However, you can pipe the values of
    the **ComputerName** and **NewName** properties of objects to this cmdlet.
outputs:
- name: <xref href="Microsoft.PowerShell.Commands.ComputerChangeInfo" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet returns a **ComputerChangeInfo** object, if you specify the **PassThru** parameter.
    Otherwise, it does not return any output.
links:
- text: Add-Computer
  href: Add-Computer.yml
- text: Remove-Computer
  href: Remove-Computer.yml
- text: Reset-ComputerMachinePassword
  href: Reset-ComputerMachinePassword.yml
- text: Restart-Computer
  href: Restart-Computer.yml
- text: Stop-Computer
  href: Stop-Computer.yml
syntaxes:
- >-
  Rename-Computer [-ComputerName <String>] [-PassThru] [-DomainCredential <PSCredential>]

   [-LocalCredential <PSCredential>] [-NewName] <String> [-Force] [-Restart] [-WsmanAuthentication <String>]

   [-Protocol <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Rename the local computer'
  code: |-
    Rename-Computer -NewName "Server044" -DomainCredential Domain01\Admin01 -Restart
  description: ""
  summary: |+
    This command renames the local computer to `Server044` and then restarts it to make the change
    effective.

- title: 'Example 2: Rename a remote computer'
  code: |-
    Rename-Computer -ComputerName "Srv01" -NewName "Server001" -DomainCredential Domain01\Admin01 -Force
  description: ""
  summary: |+
    This command renames the `Srv01` computer to `Server001`. The computer is not restarted.

    The **DomainCredential** parameter specifies the credentials of a user who has permission to rename
    computers in the domain.

    The **Force** parameter suppresses the confirmation prompt.

parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ComputerName
  description: |+
    Renames the specified remote computer.
    The default is the local computer.

    Type the NetBIOS name, an IP address, or a fully qualified domain name of a remote computer.
    To specify the local computer, type the computer name, a dot (`.`), or `localhost`.

    This parameter does not rely on PowerShell remoting.
    You can use the **ComputerName** parameter of `Rename-Computer` even if your computer is not
    configured to run remote commands.

  defaultValue: Local Computer
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: DomainCredential
  description: |+
    Specifies a user account that has permission to connect to the domain.
    Explicit credentials are required to rename a computer that is joined to a domain.

    Type a user name, such as `User01` or `Domain01\User01`, or enter a **PSCredential** object, such
    as one generated by the `Get-Credential` cmdlet.

    If you type a user name, this cmdlet prompts you for a password.

    To specify a user account that has permission to connect to the computer that is specified by the
    **ComputerName** parameter, use the **LocalCredential** parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: LocalCredential
  description: |+
    Specifies a user account that has permission to connect to the computer specified by the
    **ComputerName** parameter. The default is the current user.

    Type a user name, such as `User01` or `Domain01\User01`, or enter a **PSCredential** object, such as
    one generated by the `Get-Credential` cmdlet.

    If you type a user name, this cmdlet prompts you for a password.

    To specify a user account that has permission to connect to the domain, use the **DomainCredential**
    parameter.

  defaultValue: Current User
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: NewName
  isRequired: true
  description: |+
    Specifies a new name for the computer.
    This parameter is required.

    Standard names may contain letters (`a-z`), (`A-Z`), numbers (`0-9`), and hyphens (`-`), but no
    spaces or periods (`.`). The name may not consist entirely of digits, and may not be longer than
    63 characters

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns the results of the command.
    Otherwise, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Protocol
  description: |+
    Specifies which protocol to use to rename the computer.
    The acceptable values for this parameter are: WSMan and DCOM.
    The default value is DCOM.

    This parameter was introduced in Windows PowerShell 3.0.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: DCOM, WSMan
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Restart
  description: |+
    Indicates that this cmdlet restarts the computer that was renamed.
    A restart is often required to make the change effective.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: WsmanAuthentication
  description: |+
    Specifies the mechanism that is used to authenticate the user credentials when this cmdlet uses the
    WSMan protocol. The acceptable values for this parameter are:

    - **Basic**
    - **CredSSP**
    - **Default**
    - **Digest**
    - **Kerberos**
    - **Negotiate**

    The default value is **Default**.

    For more information about the values of this parameter, see [AuthenticationMechanism Enumeration](/dotnet/api/system.management.automation.runspaces.authenticationmechanism).

    > [!WARNING]
    > Credential Security Service Provider (CredSSP) authentication, in which the user
    > credentials are passed to a remote computer to be authenticated, is designed for commands that
    > require authentication on more than one resource, such as accessing a remote network share.
    > This mechanism increases the security risk of the remote operation.
    > If the remote computer is compromised, the credentials that are passed to it can be used to
    > control > the network session.

    This parameter was introduced in Windows PowerShell 3.0.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Default, Basic, Negotiate, CredSSP, Digest, Kerberos
uid: Microsoft.PowerShell.Management.Rename-Computer
name: Rename-Computer
description: |-
  The `Rename-Computer` cmdlet renames the local computer or a remote computer.
  It renames one computer in each command.

  This cmdlet was introduced in Windows PowerShell 3.0.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 5/1/2019
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/rename-computer?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Rename-Computer
