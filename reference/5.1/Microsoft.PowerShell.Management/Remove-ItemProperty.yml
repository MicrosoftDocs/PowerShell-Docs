### YamlMime:PowershellCmdlet
summary: |-
  Deletes the property and its value from an item.
module: Microsoft.PowerShell.Management
notes: |-
  In the PowerShell Registry provider, registry values are considered to be properties of a registry key or subkey. You can use the **ItemProperty** cmdlets to manage these values.

  `Remove-ItemProperty` is designed to work with the data exposed by any provider. To list the providers available in your session, type `Get-PSProvider`. For more information, see about_Providers.
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a string that contains a path, but not a literal path, to this cmdlet.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet does not return any output.
links:
- text: Get-Item
  href: Get-Item.yml
- text: Clear-ItemProperty
  href: Clear-ItemProperty.yml
- text: Copy-ItemProperty
  href: Copy-ItemProperty.yml
- text: Get-ItemProperty
  href: Get-ItemProperty.yml
- text: Move-ItemProperty
  href: Move-ItemProperty.yml
- text: New-ItemProperty
  href: New-ItemProperty.yml
- text: Remove-Item
  href: Remove-Item.yml
- text: Rename-ItemProperty
  href: Rename-ItemProperty.yml
- text: Set-ItemProperty
  href: Set-ItemProperty.yml
- text: about_Providers
  href: ../Microsoft.PowerShell.Core/About/about_Providers.md
syntaxes:
- >-
  Remove-ItemProperty [-Path] <String[]> [-Name] <String[]> [-Force] [-Filter <String>] [-Include <String[]>]

   [-Exclude <String[]>] [-Credential <PSCredential>] [-WhatIf] [-Confirm] [-UseTransaction] [<CommonParameters>]
- >-
  Remove-ItemProperty -LiteralPath <String[]> [-Name] <String[]> [-Force] [-Filter <String>]

   [-Include <String[]>] [-Exclude <String[]>] [-Credential <PSCredential>] [-WhatIf] [-Confirm]

   [-UseTransaction] [<CommonParameters>]
examples:
- title: 'Example 1: Delete a registry value'
  code: |-
    Remove-ItemProperty -Path "HKLM:\Software\SmpApplication" -Name "SmpProperty"
  description: ""
  summary: |+
    This command deletes the "SmpProperty" registry value, and its data, from the "SmpApplication" subkey of the "HKEY_LOCAL_MACHINE\Software" registry key.

    Because the command is issued from a file system drive (`PS C:\>`), it includes the fully qualified path of the "SmpApplication" subkey, including the drive, `HKLM:`, and the "Software" key.

    It uses the **Name** parameter to identify the registry value that is being deleted.

- title: 'Example 2: Delete a registry value from the HKCU location'
  code: |-
    PS C:\> Set-Location HKCU:\Software\MyCompany\MyApp
    PS HKCU:\Software\MyCompany\MyApp> Remove-ItemProperty -Path . -Name "Options" -Confirm
  description: ""
  summary: |+
    These commands delete the "Options" registry value, and its data, from the "MyApp" subkey of "HKEY_CURRENT_USER\Software\MyCompany".

    The first command uses the `Set-Location` cmdlet to change the current location to the **HKEY_CURRENT_USER** drive (`HKCU:`) and the "Software\MyCompany\MyApp" subkey.

    The second command uses `Remove-ItemProperty` to remove the "Options" registry value, and its data, from the "MyApp" subkey.
    Because **Path** is required, the command uses a dot ('.') to indicate the current location.
    It uses **Name** to specify which registry value to delete.
    It uses the **Confirm** parameter to request a user prompt before deleting the value.

- title: 'Example 3: Remove a registry value by using the pipeline'
  code: |-
    Get-Item -Path HKLM:\Software\MyCompany | Remove-ItemProperty -Name NoOfEmployees
  description: ""
  summary: |+
    This command deletes the "NoOfEmployees" registry value, and its data, from the "HKLM\Software\MyCompany" registry key.

    The command uses the `Get-Item` cmdlet to get an item that represents the registry key.
    It uses a pipeline operator (`|`) to send the object to `Remove-ItemProperty`.
    Then, it uses the **Name** parameter of `Remove-ItemProperty` to specify the name of the registry value.

parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    > [!NOTE]
    > This parameter is not supported by any providers installed with PowerShell.
    > To impersonate another user, or elevate your credentials when running this cmdlet,
    > use [Invoke-Command](../Microsoft.PowerShell.Core/Invoke-Command.yml).

  defaultValue: Current user
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Exclude
  description: |+
    Specifies items that this cmdlet omits.
    The value of this parameter qualifies the **Path** parameter.
    Enter a path element or pattern, such as "*.txt".
    Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Specifies a filter in the format or language of the provider.
    The value of this parameter qualifies the **Path** parameter.

    The syntax of the filter, including the use of wildcard characters, depends on the provider.
    Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the cmdlet to remove a property of an object that cannot otherwise be accessed by the user.
    Implementation varies from provider to provider.
    For more information, see [about_Providers](../Microsoft.PowerShell.Core/About/about_Providers.md).

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Include
  description: |+
    Specifies, as a string array, an item or items that this cmdlet includes in the operation.
    The value of this parameter qualifies the **Path** parameter.
    Enter a path element or pattern, such as "*.txt".
    Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: LiteralPath
  isRequired: true
  description: |+
    Specifies the path to the current location of the property.
    Unlike the **Path** parameter, the value of **LiteralPath** is used exactly as it is typed.
    No characters are interpreted as wildcards.
    If the path includes escape characters, enclose it in single quotation marks.
    Single quotation marks tell PowerShell not to interpret any characters as escape sequences.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: PSPath
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies the names of the properties to remove.
    Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "1"
  aliases: PSProperty
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Path
  isRequired: true
  description: |+
    Specifies the path of the item whose properties are being removed.
    Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: UseTransaction
  description: |+
    Includes the command in the active transaction.
    This parameter is valid only when a transaction is in progress.
    For more information, see about_Transactions.

  defaultValue: "False"
  position: Named
  aliases: usetx
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Management.Remove-ItemProperty
name: Remove-ItemProperty
description: |-
  The `Remove-ItemProperty` cmdlet deletes a property and its value from an item.
  You can use it to delete registry values and the data that they store.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 10/18/2018
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/remove-itemproperty?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Remove-ItemProperty
