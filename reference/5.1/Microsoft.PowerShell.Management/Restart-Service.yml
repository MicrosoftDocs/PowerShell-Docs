### YamlMime:PowershellCmdlet
summary: |-
  Stops and then starts one or more services.
module: Microsoft.PowerShell.Management
notes: |-
  - `Restart-Service` can control services only when the current user has permission to do this. If a
    command does not work correctly, you might not have the required permissions.
  - To find the service names and display names of the services on your system, type `Get-Service`".
    The service names appear in the **Name** column, and the display names appear in the
    **DisplayName** column.
inputs:
- name: <xref href="System.ServiceProcess.ServiceController, System.String" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a service object or a string that contains a service name to this cmdlet.
outputs:
- name: <xref href="None, System.ServiceProcess.ServiceController" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet generates a **System.ServiceProcess.ServiceController** object that represents the
    restarted service, if you specify the **PassThru** parameter. Otherwise, this cmdlet does not
    generate any output.
links:
- text: Get-Service
  href: Get-Service.yml
- text: New-Service
  href: New-Service.yml
- text: Resume-Service
  href: Resume-Service.yml
- text: Set-Service
  href: Set-Service.yml
- text: Start-Service
  href: Start-Service.yml
- text: Stop-Service
  href: Stop-Service.yml
- text: Suspend-Service
  href: Suspend-Service.yml
syntaxes:
- >-
  Restart-Service [-Force] [-InputObject] <ServiceController[]> [-PassThru] [-Include <String[]>]

   [-Exclude <String[]>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Restart-Service [-Force] [-Name] <String[]> [-PassThru] [-Include <String[]>] [-Exclude <String[]>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Restart-Service [-Force] [-PassThru] -DisplayName <String[]> [-Include <String[]>] [-Exclude <String[]>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Restart a service on the local computer'
  code: |-
    PS C:\> Restart-Service -Name winmgmt
  description: |-
    This command restarts the Windows Management Instrumentation service (WinMgmt) on the local
    computer.
  summary: ""
- title: 'Example 2: Exclude a service'
  code: |-
    PS C:\> Restart-Service -DisplayName "net*" -Exclude "net logon"
  description: |-
    This command restarts the services that have a display name that starts with Net, except for the Net
    Logon service.
  summary: ""
- title: 'Example 3: Start all stopped network services'
  code: |-
    PS C:\> Get-Service -Name "net*" | Where-Object {$_.Status -eq "Stopped"} | Restart-Service
  description: |-
    This command starts all of the stopped network services on the computer.

    This command uses the `Get-Service` cmdlet to get objects that represent the services whose service
    name starts with net. The pipeline operator (`|`) sends the services object to the `Where-Object`
    cmdlet, which selects only the services that have a status of stopped. Another pipeline operator
    sends the selected services to `Restart-Service`.

    In practice, you would use the **WhatIf** parameter to determine the effect of the command before
    you run it.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: DisplayName
  isRequired: true
  description: |+
    Specifies the display names of services to restarted. Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Exclude
  description: |+
    Specifies services that this cmdlet omits. The value of this parameter qualifies the **Name**
    parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Include
  description: |+
    Specifies services that this cmdlet restarts. The value of this parameter qualifies the **Name**
    parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.

  defaultValue: None
  acceptWildcardCharacters: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.ServiceProcess.ServiceController" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  isRequired: true
  description: |+
    Specifies **ServiceController** objects that represent the services to restart. Enter a variable
    that contains the objects, or type a command or expression that gets the objects.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  isRequired: true
  description: |+
    Specifies the service names of the services to restart.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "0"
  aliases: ServiceName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object that represents the service. By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Management.Restart-Service
name: Restart-Service
description: |-
  The `Restart-Service` cmdlet sends a stop message and then a start message to the Windows Service
  Controller for a specified service. If a service was already stopped, it is started without
  notifying you of an error. You can specify the services by their service names or display names, or
  you can use the **InputObject** parameter to pass an object that represents each service that you
  want to restart.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/restart-service?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Restart-Service
