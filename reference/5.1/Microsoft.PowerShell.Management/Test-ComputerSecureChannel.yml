### YamlMime:PowershellCmdlet
summary: |-
  Tests and repairs the secure channel between the local computer and its domain.
module: Microsoft.PowerShell.Management
notes: |-
  * To run a **Test-ComputerSecureChannel** command on Windows Vista and later versions of the Windows operating system, open Windows PowerShell by using the Run as administrator option.
  * **Test-ComputerSecureChannel** is implemented by using the **I_NetLogonControl2** function, which controls various aspects of the Netlogon service.
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    You cannot pipe input to this cmdlet.
outputs:
- name: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet returns $True if the connection is working correctly and $False if it is not.
links:
- text: Checkpoint-Computer
  href: Checkpoint-Computer.yml
- text: Reset-ComputerMachinePassword
  href: Reset-ComputerMachinePassword.yml
- text: Restart-Computer
  href: Restart-Computer.yml
- text: Stop-Computer
  href: Stop-Computer.yml
syntaxes:
- >-
  Test-ComputerSecureChannel [-Repair] [-Server <String>] [-Credential <PSCredential>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: 'Example 1: Test a channel between the local computer and its domain'
  code: |-
    PS C:\> Test-ComputerSecureChannel
    True
  description: |-
    This command tests the channel between the local computer and the domain to which it is joined.
  summary: ""
- title: 'Example 2: Test a channel between the local computer and a domain controller'
  code: |-
    PS C:\> Test-ComputerSecureChannel -Server "DCName.fabrikam.com"
    True
  description: |-
    This command specifies a preferred domain controller for the test.
  summary: ""
- title: 'Example 3: Reset the channel between the local computer and its domain'
  code: |-
    PS C:\> Test-ComputerSecureChannel -Repair
    True
  description: |-
    This command resets the channel between the local computer and its domain.
  summary: ""
- title: 'Example 4: Display detailed information about the test'
  code: |-
    PS C:\> Test-ComputerSecureChannel -verbose
    VERBOSE: Performing operation "Test-ComputerSecureChannel" on Target "SERVER01".
    True
    VERBOSE: "The secure channel between 'SERVER01' and 'net.fabrikam.com' is alive and working correctly."
  description: |-
    This command uses the *Verbose* common parameter to request detailed messages about the operation.
    For more information about *Verbose*, see about_CommonParameters.
  summary: ""
- title: 'Example 5: Test a connection before you run a script'
  code: |-
    PS C:\> Set-Alias tcsc Test-ComputerSecureChannel
    if (!(tcsc))
    {Write-Host "Connection failed. Reconnect and retry."}
    else { &(.\Get-Servers.ps1) }
  description: |-
    This example shows how to use **Test-ComputerSecureChannel** to test a connection before you run a script that requires the connection.

    The first command uses the Set-Alias cmdlet to create an alias for the cmdlet name.
    This saves space and prevents typing errors.

    The **If** statement checks the value that **Test-ComputerSecureChannel** returns before it runs a script.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user account that has permission to perform this action.
    Type a user name, such as User01 or Domain01\User01, or enter a **PSCredential** object, such as one that the Get-Credential cmdlet returns.
    By default, the cmdlet uses the credentials of the current user.

    The *Credential* parameter is designed for use in commands that use the *Repair* parameter to repair the channel between the computer and the domain.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Repair
  description: |+
    Indicates that this cmdlet removes and then rebuilds the channel established by the NetLogon service.
    Use this parameter to try to restore a connection that has failed the test.

    To use this parameter, the current user must be a member of the Administrators group on the local computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    Specifies the domain controller to run the command.
    If this parameter is not specified, this cmdlet selects a default domain controller for the operation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Management.Test-ComputerSecureChannel
name: Test-ComputerSecureChannel
description: |-
  The **Test-ComputerSecureChannel** cmdlet verifies that the channel between the local computer and its domain is working correctly by checking the status of its trust relationships.
  If a connection fails, you can use the *Repair* parameter to try to restore it.

  **Test-ComputerSecureChannel** returns $True if the channel is working correctly and $False if it is not.
  This result lets you use the cmdlet in conditional statements in functions and scripts.
  To get more detailed test results, use the *Verbose* parameter.

  This cmdlet works much like NetDom.exe.
  Both NetDom and **Test-ComputerSecureChannel** use the **NetLogon** service to perform the actions.
metadata:
  external help file: Microsoft.PowerShell.Commands.Management.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Management
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/test-computersecurechannel?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Test-ComputerSecureChannel
