### YamlMime:PowershellCmdlet
summary: |-
  Gets approved PowerShell verbs.
module: Microsoft.PowerShell.Core
notes: |-
  `Get-Verb` returns a modified version of a Microsoft.PowerShell.Commands.MemberDefinition object.
  The object does not have the standard properties of a MemberDefinition object. Instead it has Verb
  and Group properties. The Verb property contains a string with the verb name. The Group property
  contains a string with the verb group.

  PowerShell verbs are assigned to a group based on their most common use. The groups are designed to
  make the verbs easy to find and compare, not to restrict their use. You can use any approved verb
  for any type of command.

  Each PowerShell verb is assigned to one of the following groups.

  - Common: Define generic actions that can apply to almost any cmdlet, such as Add.
  - Communications:  Define actions that apply to communications, such as Connect.
  - Data:  Define actions that apply to data handling, such as Backup.
  - Diagnostic: Define actions that apply to diagnostics, such as Debug.
  - Lifecycle: Define actions that apply to the lifecycle of a cmdlet, such as Complete.
  - Security: Define actions that apply to security, such as Revoke.
  - Other: Define other types of actions.

  Some of the cmdlets that are installed with PowerShell, such as `Tee-Object` and `Where-Object`, use
  unapproved verbs. These cmdlets are historic exceptions and their verbs are classified as
  **reserved**.
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Selected.Microsoft.PowerShell.Commands.MemberDefinition" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Import-Module
  href: import-module.yml
syntaxes:
- Get-Verb [[-verb] <String[]>] [<CommonParameters>]
examples:
- title: Example 1 - Get a list of all verbs
  code: |-
    Get-Verb
  description: ""
  summary: ""
- title: Example 2 - Get a list of approved verbs that begin with "un"
  code: |-
    Get-Verb un*

    Verb                 Group
    ----                 -----
    Undo                 Common
    Unlock               Common
    Unpublish            Data
    Uninstall            Lifecycle
    Unregister           Lifecycle
    Unblock              Security
    Unprotect            Security
  description: ""
  summary: ""
- title: Example 3 - Get all approved verbs in the Security group
  code: |-
    Get-Verb | Where-Object Group -EQ Security

    Verb      Group
    ----      -----
    Block     Security
    Grant     Security
    Protect   Security
    Revoke    Security
    Unblock   Security
    Unprotect Security
  description: ""
  summary: ""
- title: Example 4 - Finds all commands in a module that have unapproved verbs
  code: |-
    Get-Command -Module Microsoft.PowerShell.Utility | Where-Object Verb -NotIn (Get-Verb).Verb

    CommandType     Name            Version    Source
    -----------     ----            -------    ------
    Cmdlet          Sort-Object     3.1.0.0    Microsoft.PowerShell.Utility
    Cmdlet          Tee-Object      3.1.0.0    Microsoft.PowerShell.Utility
  description: ""
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: verb
  description: |+
    Gets only the specified verbs.
    Enter the name of a verb or a name pattern.
    Wildcards are allowed.

  defaultValue: All verbs
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Core.Get-Verb
name: Get-Verb
description: |-
  The `Get-Verb` function gets verbs that are approved for use in PowerShell commands.

  PowerShell recommends cmdlet and function names have the Verb-Noun format and include an
  approved verb. This practice makes command names more consistent, predictable, and easier to
  use.

  Commands that use unapproved verbs run in PowerShell. However, when you import a module that
  includes a command with an unapproved verb in its name, the `Import-Module` command displays a
  warning message.

  > [!NOTE]
  > The verb list that `Get-Verb` returns might not be complete. For an updated list of approved
  > PowerShell verbs with descriptions, see
  > [Approved Verbs](../../docs-conceptual/developer/cmdlet/approved-verbs-for-windows-powershell-commands.md) in
  > the Microsoft Docs.
metadata:
  external help file: System.Management.Automation.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  ms.date: 09/07/2018
  Module Name: Microsoft.PowerShell.Core
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.core/functions/get-verb?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Get-Verb
