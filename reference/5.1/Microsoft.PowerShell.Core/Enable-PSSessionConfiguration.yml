### YamlMime:PowershellCmdlet
summary: |-
  Enables the session configurations on the local computer.
module: Microsoft.PowerShell.Core
notes: |-
  To use this cmdlet, you must start PowerShell by using the **Run as administrator** option.
inputs:
- name: <xref href="Microsoft.PowerShell.Commands.PSSessionConfigurationCommands#PSSessionConfiguration, System.String" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a session configuration object or a string that contains the name of a session
    configuration to this cmdlet.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    This cmdlet does not return any objects.
links:
- text: Disable-PSSessionConfiguration
  href: Disable-PSSessionConfiguration.yml
- text: Get-PSSessionConfiguration
  href: Get-PSSessionConfiguration.yml
- text: New-PSSessionConfigurationFile
  href: New-PSSessionConfigurationFile.yml
- text: New-PSSessionOption
  href: New-PSSessionOption.yml
- text: Register-PSSessionConfiguration
  href: Register-PSSessionConfiguration.yml
- text: Set-PSSessionConfiguration
  href: Set-PSSessionConfiguration.yml
- text: Test-PSSessionConfigurationFile
  href: Test-PSSessionConfigurationFile.yml
- text: Unregister-PSSessionConfiguration
  href: Unregister-PSSessionConfiguration.yml
- text: WSMan Provider
  href: ../Microsoft.WsMan.Management/About/about_WSMan_Provider.md
- text: about_Session_Configurations
  href: About/about_Session_Configurations.md
- text: about_Session_Configuration_Files
  href: About/about_Session_Configuration_Files.md
syntaxes:
- >-
  Enable-PSSessionConfiguration [[-Name] <String[]>] [-Force] [-SecurityDescriptorSddl <String>]

   [-SkipNetworkProfileCheck] [-NoServiceRestart] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Re-enable the default session'
  code: |-
    Enable-PSSessionConfiguration
  description: ""
  summary: |+
    This example re-enables the **Microsoft.PowerShell** default session configuration on the computer.

- title: 'Example 2: Re-enable specified sessions'
  code: |-
    Enable-PSSessionConfiguration -Name MaintenanceShell, AdminShell
  description: ""
  summary: |+
    This example re-enables the **MaintenanceShell** and **AdminShell** session configurations on the
    computer.

- title: 'Example 3: Re-enable the all sessions'
  code: |-
    Enable-PSSessionConfiguration -Name *
    Get-PSSessionConfiguration | Enable-PSSessionConfiguration
  description: |-
    `Enable-PSSessionConfiguration` does not generate an error if you enable a session configuration
    that is already enabled.
  summary: |+
    This example re-enables all session configurations on the computer. These commands are equivalent.
    Therefore, you can use either.

- title: 'Example 4: Re-enable a session and specify a new security descriptor'
  code: |-
    $sddl = "O:NSG:BAD:P(A;;GXGWGR;;;BA)(A;;GAGR;;;S-1-5-21-123456789-188441444-3100496)S:P"
    Enable-PSSessionConfiguration -Name MaintenanceShell -SecurityDescriptorSDDL $sddl
  description: ""
  summary: |+
    This example re-enables the **MaintenanceShell** session configuration and specifies a new security
    descriptor for the configuration.

parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Indicates that the cmdlet does not prompt you for confirmation, and restarts the WinRM service
    without prompting. Restarting the service makes the configuration change effective.

    To prevent a restart and suppress the restart prompt, use the **NoServiceRestart** parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Name
  description: |+
    Specifies the names of session configurations to enable. Enter one or more configuration names.
    Wildcard characters are permitted.

    You can also pipe a string that contains a configuration name or a session configuration object to
    `Enable-PSSessionConfiguration`.

    If you omit this parameter, `Enable-PSSessionConfiguration` enables the **Microsoft.PowerShell**
    session configuration.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoServiceRestart
  description: |+
    Indicates that the cmdlet does not restart the service.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: SecurityDescriptorSddl
  description: |+
    Specifies a security descriptor with which this cmdlet replaces the security descriptor on the
    session configuration.

    If you omit this parameter, `Enable-PSSessionConfiguration` only deletes the deny all item from the
    security descriptor.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipNetworkProfileCheck
  description: |+
    Indicates that this cmdlet enables the session configuration when the computer is on a public
    network. This parameter enables a firewall rule for public networks that allows remote access only
    from computers in the same local subnet. By default, `Enable-PSSessionConfiguration` fails on a
    public network.

    This parameter is designed for client versions of the Windows operating system. Server versions of
    the Windows operating system have a local subnet firewall rule for public networks. However, if the
    local subnet firewall rule is disabled on a server version of the Windows operating system, this
    parameter re-enables it.

    To remove the local subnet restriction and enable remote access from all locations on public
    networks, use the `Set-NetFirewallRule` cmdlet in the NetSecurity module. For more information, see
    `Enable-PSRemoting`.

    This parameter was introduced in PowerShell 3.0.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Core.Enable-PSSessionConfiguration
name: Enable-PSSessionConfiguration
description: |-
  The `Enable-PSSessionConfiguration` cmdlet enables registered session configurations that have been
  disabled, such as by using the `Disable-PSSessionConfiguration` or `Disable-PSRemoting` cmdlets, or
  the **AccessMode** parameter of `Register-PSSessionConfiguration`. This is an advanced cmdlet that
  is designed to be used by system administrators to manage customized session configurations for
  their users.

  Without parameters, `Enable-PSSessionConfiguration` enables the **Microsoft.PowerShell**
  configuration, which is the default configuration that is used for sessions.

  `Enable-PSSessionConfiguration` removes the **Deny_All** setting from the security descriptor of the
  affected session configurations, turns on the listener that accepts requests on any IP address, and
  restarts the WinRM service. Beginning in PowerShell 3.0, `Enable-PSSessionConfiguration`
  also sets the value of the **Enabled** property of the session configuration
  (`WSMan:\<computer>\PlugIn\<SessionConfigurationName>\Enabled`) to True. However,
  `Enable-PSSessionConfiguration` does not remove or change the **Network_Deny_All**
  (`AccessMode=Local`) security descriptor setting that allows only users of the local computer to use
  to the session configuration.
metadata:
  external help file: System.Management.Automation.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: Microsoft.PowerShell.Core
  ms.date: 03/26/2019
  online version: https://docs.microsoft.com/powershell/module/microsoft.powershell.core/enable-pssessionconfiguration?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Enable-PSSessionConfiguration
