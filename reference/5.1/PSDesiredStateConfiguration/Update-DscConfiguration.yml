### YamlMime:PowershellCmdlet
summary: |-
  Checks the pull server for an updated configuration and applies it.
module: PSDesiredStateConfiguration
notes: ""
links:
- text: Windows PowerShell Desired State Configuration Overview
  href: /powershell/scripting/dsc/overview/dscforengineers
- text: Get-DscConfiguration
  href: Get-DscConfiguration.yml
- text: Get-DscConfigurationStatus
  href: Get-DscConfigurationStatus.yml
- text: Restore-DscConfiguration
  href: Restore-DscConfiguration.yml
- text: Start-DscConfiguration
  href: Start-DscConfiguration.yml
- text: Stop-DscConfiguration
  href: Stop-DscConfiguration.yml
- text: Test-DscConfiguration
  href: Test-DscConfiguration.yml
syntaxes:
- >-
  Update-DscConfiguration [-Wait] [-JobName <String>] [[-ComputerName] <String[]>] [-Credential <PSCredential>]

   [-ThrottleLimit <Int32>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Update-DscConfiguration [-Wait] [-JobName <String>] [-ThrottleLimit <Int32>] -CimSession <CimSession[]>

   [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Update a configuration'
  code: |-
    PS C:\> Update-DscConfiguration -Wait -Verbose
  description: |-
    After running this command,
    the server will connect to the registered pull service,
    download the latest assigned configuration,
    and then apply it.
    The -Wait and -Verbose parameters are optional.
    When working interactively,
    these parameters combined enable real-time feedback
    about progress and success or failure when applying the configuration.
  summary: ""
- title: 'Example 2: Update a configuration by connecting over a CIM session'
  code: |-
    PS C:\> $Session = New-CimSession -ComputerName "Server01" -Credential ACCOUNTS\PattiFuller
    PS C:\> Update-DscConfiguration -CimSession $Session -Wait
  description: |-
    The first command creates a CIM session by using the **New-CimSession** cmdlet, and then stores the **CimSession** object in the $Session variable.
    The command prompts you for a password.
    For more information, type `Get-Help New-CimSession`.

    The second command updates the computer specified in the **CimSession** stored in $Session.
    The command specifies the *Wait* parameter.
    The console does not accept additional commands until the current command finishes.
  summary: ""
parameters:
- type: <xref href="Microsoft.Management.Infrastructure.CimSession" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CimSession
  isRequired: true
  description: |+
    Runs the cmdlet in a remote session or on a remote computer.
    Enter a computer name or a session object, such as the output of a [New-CimSession](/powershell/module/cimcmdlets/new-cimsession) or [Get-CimSession](/powershell/module/cimcmdlets/get-cimsession) cmdlet.
    The default is the current session on the local computer.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ComputerName
  description: |+
    Specifies an array of computer names.
    The cmdlet applies the configuration settings to the computers that this parameter specifies.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: CN, ServerName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.PSCredential" data-throw-if-not-resolved="False" />
  name: Credential
  description: |+
    Specifies a user name and password, as a **PSCredential** object, for the target computer.
    To obtain a **PSCredential** object, use the Get-Credential cmdlet.
    For more information, type `Get-Help Get-Credential`.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: JobName
  description: |+
    Specifies a friendly name for a job.
    If you specify this parameter, the cmdlet runs as a job, and it returns a **Job** object.

    By default, Windows PowerShell assigns the name JobN where N is an integer.

    If you specify the *Wait* parameter, do not specify this parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Int32" data-throw-if-not-resolved="False" />
  name: ThrottleLimit
  description: |+
    Specifies the maximum number of concurrent operations that can be established to run the cmdlet.
    If this parameter is omitted or a value of `0` is entered, then Windows PowerShell calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer.
    The throttle limit applies only to the current cmdlet, not to the session or to the computer.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Wait
  description: |+
    Indicates that the cmdlet blocks the console until it finishes all configuration tasks.

    If you specify this parameter, do not specify the *JobName* parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: PSDesiredStateConfiguration.Update-DscConfiguration
name: Update-DscConfiguration
description: |-
  The `Update-DscConfiguration` cmdlet connects to a pull server, downloads the configuration if it differs from what is current on the node, and then applies the configuration to the computer.

  This cmdlet is available only as part of the [November 2014 update rollup for Windows RT 8.1, Windows 8.1, and Windows Server 2012 R2](https://support.microsoft.com/kb/3000850) from the Microsoft Support library.
metadata:
  external help file: Microsoft.Windows.DSC.CoreConfProviders.dll-Help.xml
  keywords: powershell,cmdlet
  Locale: en-US
  Module Name: PSDesiredStateConfiguration
  ms.date: 06/09/2017
  online version: https://docs.microsoft.com/powershell/module/psdesiredstateconfiguration/update-dscconfiguration?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Update-DscConfiguration
