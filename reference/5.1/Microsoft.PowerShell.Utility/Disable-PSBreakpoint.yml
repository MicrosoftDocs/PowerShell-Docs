### YamlMime:PowershellCmdlet
summary: |-
  Disables the breakpoints in the current console.
module: Microsoft.PowerShell.Utility
notes: |-
  Windows PowerShell includes the following aliases for `Disable-PSBreakpoint`:

  - `dbp`
inputs:
- name: <xref href="System.Management.Automation.Breakpoint" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe a breakpoint object to this cmdlet.
outputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: |-
    By default, this cmdlet returns no output.
- name: <xref href="System.Management.Automation.Breakpoint" data-throw-if-not-resolved="False" />
  description: |-
    When you use the **PassThru** parameter, this cmdlet returns a breakpoint object representing the
    disabled breakpoint.
links:
- text: Enable-PSBreakpoint
  href: Enable-PSBreakpoint.yml
- text: Get-PSBreakpoint
  href: Get-PSBreakpoint.yml
- text: Get-PSCallStack
  href: Get-PSCallStack.yml
- text: Remove-PSBreakpoint
  href: Remove-PSBreakpoint.yml
- text: Set-PSBreakpoint
  href: Set-PSBreakpoint.yml
syntaxes:
- Disable-PSBreakpoint [-PassThru] [-Breakpoint] <Breakpoint[]> [-WhatIf] [-Confirm] [<CommonParameters>]
- Disable-PSBreakpoint [-PassThru] [-Id] <Int32[]> [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Set a breakpoint and disable it'
  code: |-
    $B = Set-PSBreakpoint -Script "sample.ps1" -Variable "name"
    $B | Disable-PSBreakpoint
  description: |-
    The `Set-PSBreakpoint` cmdlet creates a breakpoint on the `$Name` variable in the `Sample.ps1`
    script and saves the breakpoint object in the `$B` variable. The `Disable-PSBreakpoint` cmdlet
    disables the new breakpoint. It uses a pipeline operator (`|`) to send the breakpoint object in `$B`
    to the `Disable-PSBreakpoint` cmdlet.

    As a result of this command, the value of the **Enabled** property of the breakpoint object in `$B`
    is **False**.
  summary: |+
    These commands disable a newly-created breakpoint.

- title: 'Example 2: Disable a breakpoint'
  code: |-
    Disable-PSBreakpoint -Id 0
  description: ""
  summary: |+
    This command disables the breakpoint with breakpoint ID 0.

- title: 'Example 3: Create a disabled breakpoint'
  code: |-
    Disable-PSBreakpoint -Breakpoint ($B = Set-PSBreakpoint -Script "sample.ps1" -Line 5)
  description: |-
    It uses the `Disable-PSBreakpoint` cmdlet to disable the breakpoint. The value of the **Breakpoint**
    parameter is a `Set-PSBreakpoint` command that sets a new breakpoint, generates a breakpoint object,
    and saves the object in the `$B` variable.

    Cmdlet parameters that take objects as their values can accept a variable that contains the object
    or a command that gets or generates the object. In this case, because `Set-PSBreakpoint` generates a
    breakpoint object, it can be used as the value of the **Breakpoint** parameter.
  summary: |+
    This command creates a new breakpoint that is disabled until you enable it.

- title: 'Example 4: Disable all breakpoints in the current console'
  code: |-
    `Get-PSBreakpoint` | Disable-PSBreakpoint
  description: ""
  summary: |+
    This command disables all breakpoints in the current console.

parameters:
- type: <xref href="System.Management.Automation.Breakpoint" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Breakpoint
  isRequired: true
  description: |+
    Specifies the breakpoints to disable. Enter a variable that contains breakpoint objects or a command
    that gets breakpoint objects, such as a `Get-PSBreakpoint` command. You can also pipe breakpoint
    objects to the `Disable-PSBreakpoint` cmdlet.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.Int32" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Id
  isRequired: true
  description: |+
    Disables the breakpoints with the specified breakpoint IDs. Enter the IDs or a variable that
    contains the IDs. You cannot pipe IDs to `Disable-PSBreakpoint`.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the enabled breakpoints. By default, this cmdlet does not generate
    any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.PowerShell.Utility.Disable-PSBreakpoint
name: Disable-PSBreakpoint
description: |-
  The `Disable-PSBreakpoint` cmdlet disables breakpoints, which assures that they are not hit when the
  script runs. You can use it to disable all breakpoints, or you can specify breakpoints by submitting
  breakpoint objects or breakpoint IDs.

  Technically, this cmdlet changes the value of the Enabled property of a breakpoint object to False.
  To re-enable a breakpoint, use the `Enable-PSBreakpoint` cmdlet. Breakpoints are enabled by default
  when you create them using the `Set-PSBreakpoint` cmdlet.

  A breakpoint is a point in a script where execution stops temporarily so that you can examine the
  instructions in the script. `Disable-PSBreakpoint` is one of several cmdlets designed for debugging
  PowerShell scripts. For more information about the PowerShell debugger, see
  [about_Debuggers](../microsoft.powershell.core/about/about_debuggers.md).
metadata:
  external help file: Microsoft.PowerShell.Commands.Utility.dll-Help.xml
  Locale: en-US
  Module Name: Microsoft.PowerShell.Utility
  ms.date: 12/12/2022
  online version: https://learn.microsoft.com/powershell/module/microsoft.powershell.utility/disable-psbreakpoint?view=powershell-5.1&WT.mc_id=ps-gethelp
  schema: 2.0.0
  title: Disable-PSBreakpoint
